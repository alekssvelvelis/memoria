{"ast":null,"code":"import React,{useState,useEffect}from'react';import PasswordToggle from'./PasswordToggle';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function ProfileChangePassword(_ref){let{onClose}=_ref;const[errors,setErrors]=useState({});const updatePassword=async formData=>{try{const token=localStorage.getItem('token');const response=await fetch('http://localhost/api/updatePassword',{method:'POST',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(token)},body:JSON.stringify(formData)});if(!response.ok){const errorData=await response.json();console.error('Error:',errorData);throw new Error('Password update failed');}console.log('Password updated successfully');onClose();}catch(error){console.error('Error:',error.message);}};const handleSubmitForm=async e=>{e.preventDefault();const formData={password:e.target.password?e.target.password.value.trim():'',confirmPassword:e.target.confirmPassword?e.target.confirmPassword.value.trim():'',currentPassword:e.target.currentPassword?e.target.currentPassword.value.trim():''};const validationErrors={};const passwordToClear=formData.password;const confirmToClear=formData.confirmPassword;const currentPassword=formData.currentPassword;if(!passwordToClear){validationErrors.password='Password is required';}else if(passwordToClear.length<8){validationErrors.password='Minimum length is 8 symbols';}if(!confirmToClear){validationErrors.confirmPassword='Confirmed password is required';}else if(confirmToClear.length<8){validationErrors.confirmPassword='Minimum length is 8 symbols';}else if(confirmToClear!==passwordToClear){validationErrors.confirmPassword='Passwords do not match';}if(!currentPassword){validationErrors.currentPassword='Current password is required';}if(Object.keys(validationErrors).length===0){try{const isLoggedInObject=localStorage.getItem('token');const isLoggedIn=isLoggedInObject?JSON.parse(isLoggedInObject).value:null;const response=await fetch('http://localhost/api/updatePassword',{method:'POST',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(isLoggedIn)},body:JSON.stringify(formData)});const responseData=await response.json();if(!response.ok){console.error('Error:',responseData.error);if(responseData.error==='Invalid current password'){setErrors({currentPassword:'Wrong current password'});}throw new Error('Password update failed');}// Handle success\nconsole.log('Password updated successfully');// You may want to do something else on success, such as closing the modal\nonClose();}catch(error){console.error('Error:',error.message);}}else{setErrors(validationErrors);}};console.log(errors);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{onClick:onClose,className:\"w-screen h-screen fixed top-0 left-0 bg-black bg-opacity-40 z-40 transition-opacity duration-300 opacity-100\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"border-[3px] z-[45] text-white border-neutral-300 bg-[#181a1b] shadow-lg sm:ml-0 md:ml-0 lg:ml-0 lg:ml-0 min-h-[300px] xl:w-[500px] lg:w-[500px] md:w-[500px] sm:w-[500px] max-[425px]:w-[400px] max-[375px]:w-[350px] max-[325px]:w-[310px]  w-[400px] font-light rounded-md shadow-lg mb-4 max-[769px]:mt-[24px] mt-[48px] fixed -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:onClose,className:\"absolute right-2 text-3xl text-white cursor-pointer hover:text-gray-300\",children:\"X\"}),/*#__PURE__*/_jsx(\"div\",{className:\"w-full min-h-full flex flex-wrap\",children:/*#__PURE__*/_jsxs(\"form\",{className:\"w-full min-h-full flex flex-col justify-center items-center\",onSubmit:handleSubmitForm,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"w-[95%]\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl tracking-widest my-1\",children:\"Change your password:\"}),/*#__PURE__*/_jsx(\"p\",{className:\"font-light text-lg uppercase text-[rgb(175,169,158)] mb-4 mt-2\",children:\"Enter your new password\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"w-[90%]\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"ml-3 text-lg uppercase tracking-widest\",htmlFor:\"currentPassword\",children:\"Current password:\"}),/*#__PURE__*/_jsx(PasswordToggle,{id:\"currentPassword\"}),errors.currentPassword&&/*#__PURE__*/_jsx(\"p\",{className:\"text-red-500 ml-3 my-2 text-lg\",children:errors.currentPassword})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"w-[90%]\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"ml-3 text-lg uppercase tracking-widest\",htmlFor:\"password\",children:\"Password:\"}),/*#__PURE__*/_jsx(PasswordToggle,{id:\"password\"}),errors.password&&/*#__PURE__*/_jsx(\"p\",{className:\"text-red-500 ml-3 my-2 text-lg\",children:errors.password})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"w-[90%]\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"ml-3 text-lg uppercase tracking-widest\",htmlFor:\"confirmPassword\",children:\"Confirm Password:\"}),/*#__PURE__*/_jsx(PasswordToggle,{id:\"confirmPassword\"}),errors.confirmPassword&&/*#__PURE__*/_jsx(\"p\",{className:\"text-red-500 ml-3 my-2 text-lg\",children:errors.confirmPassword})]}),/*#__PURE__*/_jsx(\"input\",{className:\"mt-4 w-[75%] my-2 h-10 bg-[rgb(33,36,37)] hover:bg-[rgb(39,42,43)] hover:border-neutral-200 focus:border-2 border-neutral-600 border text-white text-2xl rounded-sm duration-500 hover:scale-105 cursor-pointer\",type:\"submit\",value:\"Change\"})]})})]})]});}export default ProfileChangePassword;","map":{"version":3,"names":["React","useState","useEffect","PasswordToggle","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ProfileChangePassword","_ref","onClose","errors","setErrors","updatePassword","formData","token","localStorage","getItem","response","fetch","method","headers","concat","body","JSON","stringify","ok","errorData","json","console","error","Error","log","message","handleSubmitForm","e","preventDefault","password","target","value","trim","confirmPassword","currentPassword","validationErrors","passwordToClear","confirmToClear","length","Object","keys","isLoggedInObject","isLoggedIn","parse","responseData","children","onClick","className","onSubmit","htmlFor","id","type"],"sources":["/Users/alekssvelvelis/Desktop/memory-game/src/components/ProfileChangePassword.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PasswordToggle from './PasswordToggle';\n\nfunction ProfileChangePassword({ onClose }) {\n    const [errors, setErrors] = useState({});\n\n    const updatePassword = async (formData) => {\n        try {\n            const token = localStorage.getItem('token');\n            const response = await fetch('http://localhost/api/updatePassword', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`\n                },\n                body: JSON.stringify(formData)\n            });\n    \n            if (!response.ok) {\n                const errorData = await response.json();\n                console.error('Error:', errorData);\n                throw new Error('Password update failed');\n            }\n            console.log('Password updated successfully');\n            onClose();\n        } catch (error) {\n            console.error('Error:', error.message);\n        }\n    };\n\n    const handleSubmitForm = async (e) => {\n        e.preventDefault();\n    \n        const formData = {\n            password: e.target.password ? e.target.password.value.trim() : '',\n            confirmPassword: e.target.confirmPassword ? e.target.confirmPassword.value.trim() : '',\n            currentPassword: e.target.currentPassword ? e.target.currentPassword.value.trim() : '',\n        };\n\n        const validationErrors = {};\n        const passwordToClear = formData.password;\n        const confirmToClear = formData.confirmPassword;\n        const currentPassword = formData.currentPassword;\n        \n        if(!passwordToClear){\n            validationErrors.password = 'Password is required';\n        }else if (passwordToClear.length < 8){\n            validationErrors.password = 'Minimum length is 8 symbols';\n        }\n\n        if(!confirmToClear){\n            validationErrors.confirmPassword = 'Confirmed password is required';\n        }else if (confirmToClear.length < 8){\n            validationErrors.confirmPassword = 'Minimum length is 8 symbols';\n        }  else if (confirmToClear !== passwordToClear) {\n            validationErrors.confirmPassword = 'Passwords do not match';\n        }\n\n        if(!currentPassword){\n            validationErrors.currentPassword = 'Current password is required';\n        }\n\n        if (Object.keys(validationErrors).length === 0) {\n            try {\n                const isLoggedInObject = localStorage.getItem('token');\n                const isLoggedIn = isLoggedInObject ? JSON.parse(isLoggedInObject).value : null;\n                const response = await fetch('http://localhost/api/updatePassword', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': `Bearer ${isLoggedIn}`\n                    },\n                    body: JSON.stringify(formData)\n                });\n                const responseData = await response.json();\n                if (!response.ok) {\n                    console.error('Error:', responseData.error);\n                    if (responseData.error === 'Invalid current password') {\n                        setErrors({ currentPassword: 'Wrong current password' });\n                    }\n                    throw new Error('Password update failed');\n                }\n        \n                // Handle success\n                console.log('Password updated successfully');\n                // You may want to do something else on success, such as closing the modal\n                onClose();\n            } catch (error) {\n                console.error('Error:', error.message);\n            }\n        } else {\n            setErrors(validationErrors);\n        }\n    };\n    console.log(errors);\n    return(\n        <>\n        <div onClick={onClose} className={`w-screen h-screen fixed top-0 left-0 bg-black bg-opacity-40 z-40 transition-opacity duration-300 opacity-100`}></div>\n        <div className={`border-[3px] z-[45] text-white border-neutral-300 bg-[#181a1b] shadow-lg sm:ml-0 md:ml-0 lg:ml-0 lg:ml-0 min-h-[300px] xl:w-[500px] lg:w-[500px] md:w-[500px] sm:w-[500px] max-[425px]:w-[400px] max-[375px]:w-[350px] max-[325px]:w-[310px]  w-[400px] font-light rounded-md shadow-lg mb-4 max-[769px]:mt-[24px] mt-[48px] fixed -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2`}>\n            <button\n                onClick={onClose}\n                className='absolute right-2 text-3xl text-white cursor-pointer hover:text-gray-300'\n            >\n                X\n            </button>\n            <div className='w-full min-h-full flex flex-wrap'>\n                    <form className='w-full min-h-full flex flex-col justify-center items-center' onSubmit={(handleSubmitForm)}>\n                        <div className='w-[95%]'>\n                            <h1 className='text-2xl tracking-widest my-1'>Change your password:</h1>\n                            <p className='font-light text-lg uppercase text-[rgb(175,169,158)] mb-4 mt-2'>Enter your new password</p>\n                        </div>\n                        <div className='w-[90%]'>\n                            <label className='ml-3 text-lg uppercase tracking-widest' htmlFor='currentPassword'>Current password:</label>\n                            <PasswordToggle id='currentPassword'/>\n                            {errors.currentPassword && <p className=\"text-red-500 ml-3 my-2 text-lg\">{errors.currentPassword}</p>}\n                        </div>\n                        <div className='w-[90%]'>\n                            <label className='ml-3 text-lg uppercase tracking-widest' htmlFor='password'>Password:</label>\n                            <PasswordToggle id='password'/>\n                            {errors.password && <p className=\"text-red-500 ml-3 my-2 text-lg\">{errors.password}</p>}\n                        </div>\n                        <div className='w-[90%]'>\n                        <label className='ml-3 text-lg uppercase tracking-widest' htmlFor='confirmPassword'>Confirm Password:</label>\n                            <PasswordToggle id='confirmPassword'/>\n                            {errors.confirmPassword && <p className=\"text-red-500 ml-3 my-2 text-lg\">{errors.confirmPassword}</p>}\n                        </div>\n                        <input className='mt-4 w-[75%] my-2 h-10 bg-[rgb(33,36,37)] hover:bg-[rgb(39,42,43)] hover:border-neutral-200 focus:border-2 border-neutral-600 border text-white text-2xl rounded-sm duration-500 hover:scale-105 cursor-pointer' type='submit' value='Change' />\n                    </form>\n            </div>\n        </div>\n        </>\n    );\n}\n\nexport default ProfileChangePassword;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,cAAc,KAAM,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAE9C,QAAS,CAAAC,qBAAqBA,CAAAC,IAAA,CAAc,IAAb,CAAEC,OAAQ,CAAC,CAAAD,IAAA,CACtC,KAAM,CAACE,MAAM,CAAEC,SAAS,CAAC,CAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC,CAExC,KAAM,CAAAc,cAAc,CAAG,KAAO,CAAAC,QAAQ,EAAK,CACvC,GAAI,CACA,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,qCAAqC,CAAE,CAChEC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACL,cAAc,CAAE,kBAAkB,CAClC,eAAe,WAAAC,MAAA,CAAYP,KAAK,CACpC,CAAC,CACDQ,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACX,QAAQ,CACjC,CAAC,CAAC,CAEF,GAAI,CAACI,QAAQ,CAACQ,EAAE,CAAE,CACd,KAAM,CAAAC,SAAS,CAAG,KAAM,CAAAT,QAAQ,CAACU,IAAI,CAAC,CAAC,CACvCC,OAAO,CAACC,KAAK,CAAC,QAAQ,CAAEH,SAAS,CAAC,CAClC,KAAM,IAAI,CAAAI,KAAK,CAAC,wBAAwB,CAAC,CAC7C,CACAF,OAAO,CAACG,GAAG,CAAC,+BAA+B,CAAC,CAC5CtB,OAAO,CAAC,CAAC,CACb,CAAE,MAAOoB,KAAK,CAAE,CACZD,OAAO,CAACC,KAAK,CAAC,QAAQ,CAAEA,KAAK,CAACG,OAAO,CAAC,CAC1C,CACJ,CAAC,CAED,KAAM,CAAAC,gBAAgB,CAAG,KAAO,CAAAC,CAAC,EAAK,CAClCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAElB,KAAM,CAAAtB,QAAQ,CAAG,CACbuB,QAAQ,CAAEF,CAAC,CAACG,MAAM,CAACD,QAAQ,CAAGF,CAAC,CAACG,MAAM,CAACD,QAAQ,CAACE,KAAK,CAACC,IAAI,CAAC,CAAC,CAAG,EAAE,CACjEC,eAAe,CAAEN,CAAC,CAACG,MAAM,CAACG,eAAe,CAAGN,CAAC,CAACG,MAAM,CAACG,eAAe,CAACF,KAAK,CAACC,IAAI,CAAC,CAAC,CAAG,EAAE,CACtFE,eAAe,CAAEP,CAAC,CAACG,MAAM,CAACI,eAAe,CAAGP,CAAC,CAACG,MAAM,CAACI,eAAe,CAACH,KAAK,CAACC,IAAI,CAAC,CAAC,CAAG,EACxF,CAAC,CAED,KAAM,CAAAG,gBAAgB,CAAG,CAAC,CAAC,CAC3B,KAAM,CAAAC,eAAe,CAAG9B,QAAQ,CAACuB,QAAQ,CACzC,KAAM,CAAAQ,cAAc,CAAG/B,QAAQ,CAAC2B,eAAe,CAC/C,KAAM,CAAAC,eAAe,CAAG5B,QAAQ,CAAC4B,eAAe,CAEhD,GAAG,CAACE,eAAe,CAAC,CAChBD,gBAAgB,CAACN,QAAQ,CAAG,sBAAsB,CACtD,CAAC,IAAK,IAAIO,eAAe,CAACE,MAAM,CAAG,CAAC,CAAC,CACjCH,gBAAgB,CAACN,QAAQ,CAAG,6BAA6B,CAC7D,CAEA,GAAG,CAACQ,cAAc,CAAC,CACfF,gBAAgB,CAACF,eAAe,CAAG,gCAAgC,CACvE,CAAC,IAAK,IAAII,cAAc,CAACC,MAAM,CAAG,CAAC,CAAC,CAChCH,gBAAgB,CAACF,eAAe,CAAG,6BAA6B,CACpE,CAAC,IAAO,IAAII,cAAc,GAAKD,eAAe,CAAE,CAC5CD,gBAAgB,CAACF,eAAe,CAAG,wBAAwB,CAC/D,CAEA,GAAG,CAACC,eAAe,CAAC,CAChBC,gBAAgB,CAACD,eAAe,CAAG,8BAA8B,CACrE,CAEA,GAAIK,MAAM,CAACC,IAAI,CAACL,gBAAgB,CAAC,CAACG,MAAM,GAAK,CAAC,CAAE,CAC5C,GAAI,CACA,KAAM,CAAAG,gBAAgB,CAAGjC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CACtD,KAAM,CAAAiC,UAAU,CAAGD,gBAAgB,CAAGzB,IAAI,CAAC2B,KAAK,CAACF,gBAAgB,CAAC,CAACV,KAAK,CAAG,IAAI,CAC/E,KAAM,CAAArB,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,qCAAqC,CAAE,CAChEC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACL,cAAc,CAAE,kBAAkB,CAClC,eAAe,WAAAC,MAAA,CAAY4B,UAAU,CACzC,CAAC,CACD3B,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACX,QAAQ,CACjC,CAAC,CAAC,CACF,KAAM,CAAAsC,YAAY,CAAG,KAAM,CAAAlC,QAAQ,CAACU,IAAI,CAAC,CAAC,CAC1C,GAAI,CAACV,QAAQ,CAACQ,EAAE,CAAE,CACdG,OAAO,CAACC,KAAK,CAAC,QAAQ,CAAEsB,YAAY,CAACtB,KAAK,CAAC,CAC3C,GAAIsB,YAAY,CAACtB,KAAK,GAAK,0BAA0B,CAAE,CACnDlB,SAAS,CAAC,CAAE8B,eAAe,CAAE,wBAAyB,CAAC,CAAC,CAC5D,CACA,KAAM,IAAI,CAAAX,KAAK,CAAC,wBAAwB,CAAC,CAC7C,CAEA;AACAF,OAAO,CAACG,GAAG,CAAC,+BAA+B,CAAC,CAC5C;AACAtB,OAAO,CAAC,CAAC,CACb,CAAE,MAAOoB,KAAK,CAAE,CACZD,OAAO,CAACC,KAAK,CAAC,QAAQ,CAAEA,KAAK,CAACG,OAAO,CAAC,CAC1C,CACJ,CAAC,IAAM,CACHrB,SAAS,CAAC+B,gBAAgB,CAAC,CAC/B,CACJ,CAAC,CACDd,OAAO,CAACG,GAAG,CAACrB,MAAM,CAAC,CACnB,mBACIN,KAAA,CAAAE,SAAA,EAAA8C,QAAA,eACAlD,IAAA,QAAKmD,OAAO,CAAE5C,OAAQ,CAAC6C,SAAS,+GAAiH,CAAM,CAAC,cACxJlD,KAAA,QAAKkD,SAAS,wXAA0X,CAAAF,QAAA,eACpYlD,IAAA,WACImD,OAAO,CAAE5C,OAAQ,CACjB6C,SAAS,CAAC,yEAAyE,CAAAF,QAAA,CACtF,GAED,CAAQ,CAAC,cACTlD,IAAA,QAAKoD,SAAS,CAAC,kCAAkC,CAAAF,QAAA,cACzChD,KAAA,SAAMkD,SAAS,CAAC,6DAA6D,CAACC,QAAQ,CAAGtB,gBAAkB,CAAAmB,QAAA,eACvGhD,KAAA,QAAKkD,SAAS,CAAC,SAAS,CAAAF,QAAA,eACpBlD,IAAA,OAAIoD,SAAS,CAAC,+BAA+B,CAAAF,QAAA,CAAC,uBAAqB,CAAI,CAAC,cACxElD,IAAA,MAAGoD,SAAS,CAAC,gEAAgE,CAAAF,QAAA,CAAC,yBAAuB,CAAG,CAAC,EACxG,CAAC,cACNhD,KAAA,QAAKkD,SAAS,CAAC,SAAS,CAAAF,QAAA,eACpBlD,IAAA,UAAOoD,SAAS,CAAC,wCAAwC,CAACE,OAAO,CAAC,iBAAiB,CAAAJ,QAAA,CAAC,mBAAiB,CAAO,CAAC,cAC7GlD,IAAA,CAACF,cAAc,EAACyD,EAAE,CAAC,iBAAiB,CAAC,CAAC,CACrC/C,MAAM,CAAC+B,eAAe,eAAIvC,IAAA,MAAGoD,SAAS,CAAC,gCAAgC,CAAAF,QAAA,CAAE1C,MAAM,CAAC+B,eAAe,CAAI,CAAC,EACpG,CAAC,cACNrC,KAAA,QAAKkD,SAAS,CAAC,SAAS,CAAAF,QAAA,eACpBlD,IAAA,UAAOoD,SAAS,CAAC,wCAAwC,CAACE,OAAO,CAAC,UAAU,CAAAJ,QAAA,CAAC,WAAS,CAAO,CAAC,cAC9FlD,IAAA,CAACF,cAAc,EAACyD,EAAE,CAAC,UAAU,CAAC,CAAC,CAC9B/C,MAAM,CAAC0B,QAAQ,eAAIlC,IAAA,MAAGoD,SAAS,CAAC,gCAAgC,CAAAF,QAAA,CAAE1C,MAAM,CAAC0B,QAAQ,CAAI,CAAC,EACtF,CAAC,cACNhC,KAAA,QAAKkD,SAAS,CAAC,SAAS,CAAAF,QAAA,eACxBlD,IAAA,UAAOoD,SAAS,CAAC,wCAAwC,CAACE,OAAO,CAAC,iBAAiB,CAAAJ,QAAA,CAAC,mBAAiB,CAAO,CAAC,cACzGlD,IAAA,CAACF,cAAc,EAACyD,EAAE,CAAC,iBAAiB,CAAC,CAAC,CACrC/C,MAAM,CAAC8B,eAAe,eAAItC,IAAA,MAAGoD,SAAS,CAAC,gCAAgC,CAAAF,QAAA,CAAE1C,MAAM,CAAC8B,eAAe,CAAI,CAAC,EACpG,CAAC,cACNtC,IAAA,UAAOoD,SAAS,CAAC,iNAAiN,CAACI,IAAI,CAAC,QAAQ,CAACpB,KAAK,CAAC,QAAQ,CAAE,CAAC,EAChQ,CAAC,CACV,CAAC,EACL,CAAC,EACJ,CAAC,CAEX,CAEA,cAAe,CAAA/B,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}