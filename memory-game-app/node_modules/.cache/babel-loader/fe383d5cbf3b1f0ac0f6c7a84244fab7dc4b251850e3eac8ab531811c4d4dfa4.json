{"ast":null,"code":"var _jsxFileName = \"/Users/alekssvelvelis/Desktop/memory-game/src/components/BackgroundReceiver.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport BIRDS from 'vanta/dist/vanta.birds.min'; // Import the Vanta.js effect you want to use\nimport NET from 'vanta/dist/vanta.net.min'; // Import the Vanta.js effect you want to use\nimport GLOBE from 'vanta/dist/vanta.globe.min'; // Import the Vanta.js effect you want to use\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BackgroundReceiver = ({\n  isLoggedIn\n}) => {\n  _s();\n  const [activeBackground, setBackground] = useState(null);\n  const vantaRef = useRef(null);\n  let vantaEffect = null;\n  useEffect(() => {\n    const getUserCurrentBackground = async () => {\n      try {\n        const response = await fetch('http://localhost/api/getUserCurrentBackground', {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${isLoggedIn}`\n          }\n        });\n        const responseData = await response.json();\n        if (!response.ok) {\n          console.error('Error:', responseData);\n        } else {\n          setBackground(responseData.background);\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    };\n    getUserCurrentBackground();\n  }, [isLoggedIn]);\n  useEffect(() => {\n    if (activeBackground) {\n      switch (activeBackground) {\n        case 'birds':\n          vantaEffect = BIRDS({\n            el: vantaRef.current,\n            THREE: THREE,\n            color2: 0x4a00ff,\n            quantity: 4.00,\n            backgroundAlpha: 1.00,\n            backgroundColor: 0x121212\n          });\n          break;\n        case 'net':\n          vantaEffect = NET({\n            el: vantaRef.current,\n            THREE: THREE,\n            backgroundAlpha: 1.00,\n            backgroundColor: 0x121212\n          });\n          break;\n        case 'globe':\n          vantaEffect = GLOBE({\n            el: vantaRef.current,\n            THREE: THREE,\n            backgroundAlpha: 1.00,\n            backgroundColor: 0x121212\n          });\n          break;\n        default:\n          console.error('Invalid Vanta.js effect specified');\n      }\n    }\n    return () => {\n      if (vantaEffect) vantaEffect.destroy();\n    };\n  }, [activeBackground]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: vantaRef,\n    className: \"min-h-screen w-screen fixed top-0 left-0\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n_s(BackgroundReceiver, \"dvblEuRvKCl2vcfaDl3/HwNj1PU=\");\n_c = BackgroundReceiver;\nexport default BackgroundReceiver;\nvar _c;\n$RefreshReg$(_c, \"BackgroundReceiver\");","map":{"version":3,"names":["React","useState","useEffect","useRef","THREE","BIRDS","NET","GLOBE","jsxDEV","_jsxDEV","BackgroundReceiver","isLoggedIn","_s","activeBackground","setBackground","vantaRef","vantaEffect","getUserCurrentBackground","response","fetch","method","headers","responseData","json","ok","console","error","background","el","current","color2","quantity","backgroundAlpha","backgroundColor","destroy","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/alekssvelvelis/Desktop/memory-game/src/components/BackgroundReceiver.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport BIRDS from 'vanta/dist/vanta.birds.min'; // Import the Vanta.js effect you want to use\nimport NET from 'vanta/dist/vanta.net.min'; // Import the Vanta.js effect you want to use\nimport GLOBE from 'vanta/dist/vanta.globe.min'; // Import the Vanta.js effect you want to use\n\nconst BackgroundReceiver = ({ isLoggedIn }) => {\n    const [activeBackground, setBackground] = useState(null);\n    const vantaRef = useRef(null);\n    let vantaEffect = null;\n\n    useEffect(() => {\n        const getUserCurrentBackground = async () => {\n            try {\n                const response = await fetch('http://localhost/api/getUserCurrentBackground', {\n                    method: 'GET',\n                    headers: {\n                        'Authorization': `Bearer ${isLoggedIn}`\n                    },\n                });\n                const responseData = await response.json();\n                if (!response.ok) {\n                    console.error('Error:', responseData);\n                } else {\n                    setBackground(responseData.background);\n                }\n            } catch (error) {\n                console.error('Error:', error);\n            }\n        };\n        getUserCurrentBackground();\n    }, [isLoggedIn]);\n\n    useEffect(() => {\n        if (activeBackground) {\n            switch (activeBackground) {\n                case 'birds':\n                    vantaEffect = BIRDS({\n                        el: vantaRef.current,\n                        THREE: THREE,\n                        color2: 0x4a00ff,\n                        quantity: 4.00,\n                        backgroundAlpha: 1.00,\n                        backgroundColor: 0x121212,\n                    });\n                    break;\n                case 'net':\n                    vantaEffect = NET({\n                        el: vantaRef.current,\n                        THREE: THREE,\n                        backgroundAlpha: 1.00,\n                        backgroundColor: 0x121212,\n                    });\n                    break;\n                case 'globe':\n                    vantaEffect = GLOBE({\n                        el: vantaRef.current,\n                        THREE: THREE,\n                        backgroundAlpha: 1.00,\n                        backgroundColor: 0x121212,\n                    });\n                    break;\n                default:\n                    console.error('Invalid Vanta.js effect specified');\n            }\n        }\n\n        return () => {\n            if (vantaEffect) vantaEffect.destroy();\n        };\n    }, [activeBackground]);\n\n    return (\n        <div ref={vantaRef} className=\"min-h-screen w-screen fixed top-0 left-0\" />\n    );\n};\n\nexport default BackgroundReceiver;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}