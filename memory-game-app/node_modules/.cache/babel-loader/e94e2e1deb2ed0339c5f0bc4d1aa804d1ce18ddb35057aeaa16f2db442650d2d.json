{"ast":null,"code":"var _jsxFileName = \"/Users/alekssvelvelis/Desktop/memory-game/src/components/MemoryGame.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst shuffleArray = array => {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n};\nconst generateCards = size => {\n  const symbols = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L'];\n  const cards = [];\n  for (let i = 0; i < size / 3; i++) {\n    const symbol = symbols[i];\n    cards.push({\n      id: i * 3,\n      symbol,\n      matched: false\n    });\n    cards.push({\n      id: i * 3 + 1,\n      symbol,\n      matched: false\n    });\n    cards.push({\n      id: i * 3 + 2,\n      symbol,\n      matched: false\n    });\n  }\n  return shuffleArray(cards);\n};\nconst MemoryGame = ({\n  size\n}) => {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [flippedCards, setFlippedCards] = useState([]);\n  useEffect(() => {\n    setCards(generateCards(size));\n  }, [size]);\n  const handleCardClick = id => {\n    if (flippedCards.length < 3 || flippedCards.some(card => card.id !== id)) {\n      setFlippedCards(prev => [...prev, {\n        id,\n        symbol: cards.find(card => card.id === id).symbol\n      }]);\n    }\n    if (flippedCards.length === 3) {\n      // Check if the symbols match\n      if (flippedCards.every(card => card.symbol === cards.find(c => c.id === card.id).symbol)) {\n        // If cards match, update state to mark them as matched\n        setCards(prev => prev.map(card => flippedCards.some(c => c.id === card.id) ? {\n          ...card,\n          matched: true\n        } : card));\n        setFlippedCards([]);\n      } else {\n        // If cards don't match, flip them back after a short delay\n        setTimeout(() => setFlippedCards([]), 1000);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `grid grid-cols-${Math.sqrt(size)} gap-4`,\n    children: cards.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `bg-blue-500 p-4 cursor-pointer ${flippedCards.some(c => c.id === card.id) || card.matched ? 'opacity-50' : ''}`,\n      onClick: () => handleCardClick(card.id),\n      children: flippedCards.some(c => c.id === card.id) || card.matched ? card.symbol : ''\n    }, card.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(MemoryGame, \"uOPXoMmHk7PpFfa2yUiZsTC1/EQ=\");\n_c = MemoryGame;\nexport default MemoryGame;\nvar _c;\n$RefreshReg$(_c, \"MemoryGame\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","shuffleArray","array","i","length","j","Math","floor","random","generateCards","size","symbols","cards","symbol","push","id","matched","MemoryGame","_s","setCards","flippedCards","setFlippedCards","handleCardClick","some","card","prev","find","every","c","map","setTimeout","className","sqrt","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/alekssvelvelis/Desktop/memory-game/src/components/MemoryGame.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst shuffleArray = (array) => {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n};\n\nconst generateCards = (size) => {\n  const symbols = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L'];\n  const cards = [];\n\n  for (let i = 0; i < size / 3; i++) {\n    const symbol = symbols[i];\n    cards.push({ id: i * 3, symbol, matched: false });\n    cards.push({ id: i * 3 + 1, symbol, matched: false });\n    cards.push({ id: i * 3 + 2, symbol, matched: false });\n  }\n\n  return shuffleArray(cards);\n};\n\nconst MemoryGame = ({ size }) => {\n  const [cards, setCards] = useState([]);\n  const [flippedCards, setFlippedCards] = useState([]);\n\n  useEffect(() => {\n    setCards(generateCards(size));\n  }, [size]);\n\n  const handleCardClick = (id) => {\n    if (flippedCards.length < 3 || flippedCards.some(card => card.id !== id)) {\n      setFlippedCards(prev => [...prev, { id, symbol: cards.find(card => card.id === id).symbol }]);\n    }\n\n    if (flippedCards.length === 3) {\n      // Check if the symbols match\n      if (flippedCards.every(card => card.symbol === cards.find(c => c.id === card.id).symbol)) {\n        // If cards match, update state to mark them as matched\n        setCards(prev => prev.map(card => (flippedCards.some(c => c.id === card.id) ? { ...card, matched: true } : card)));\n        setFlippedCards([]);\n      } else {\n        // If cards don't match, flip them back after a short delay\n        setTimeout(() => setFlippedCards([]), 1000);\n      }\n    }\n  };\n\n  return (\n    <div className={`grid grid-cols-${Math.sqrt(size)} gap-4`}>\n      {cards.map(card => (\n        <div\n          key={card.id}\n          className={`bg-blue-500 p-4 cursor-pointer ${flippedCards.some(c => c.id === card.id) || card.matched ? 'opacity-50' : ''}`}\n          onClick={() => handleCardClick(card.id)}\n        >\n          {flippedCards.some(c => c.id === card.id) || card.matched ? card.symbol : ''}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default MemoryGame;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}