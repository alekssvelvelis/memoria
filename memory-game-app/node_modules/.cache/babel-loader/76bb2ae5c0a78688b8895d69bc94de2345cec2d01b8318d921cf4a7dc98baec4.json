{"ast":null,"code":"var _jsxFileName = \"/Users/alekssvelvelis/Desktop/memory-game/src/components/ProfileChangePassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PasswordToggle from './PasswordToggle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ProfileChangePassword() {\n  _s();\n  const [isPasswordModalOpen, setIsPasswordModalOpen] = useState(false);\n  const toggleMobileMenu = () => {\n    setIsPasswordModalOpen(!isPasswordModalOpen);\n  };\n  const handleSubmitForm = async e => {\n    e.preventDefault();\n    const formData = {\n      username: e.target.username ? e.target.username.value.trim() : '',\n      password: e.target.password ? e.target.password.value.trim() : '',\n      registerEmail: e.target.registerEmail ? e.target.registerEmail.value.trim() : '',\n      registerUsername: e.target.registerUsername ? e.target.registerUsername.value.trim() : '',\n      registerPassword: e.target.registerPassword ? e.target.registerPassword.value.trim() : '',\n      confirmRegisterPassword: e.target.confirmRegisterPassword ? e.target.confirmRegisterPassword.value.trim() : ''\n    };\n    if (isLoginForm) {\n      const validationErrors = {};\n      const usernameToClear = formData.username;\n      const passwordToClear = formData.password;\n      if (!usernameToClear) {\n        validationErrors.loginUsername = 'Username is required';\n      }\n      if (!passwordToClear) {\n        validationErrors.loginPassword = 'Password is required';\n      }\n      setErrors(validationErrors);\n      if (Object.keys(validationErrors).length === 0) {\n        setErrors({});\n        // console.log(formData);\n        try {\n          const response = await fetch('http://localhost/api/login', {\n            method: 'POST',\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(formData)\n          });\n          const responseData = await response.json();\n          if (!response.ok) {\n            console.error('Error:', responseData.error);\n            if (responseData.error === 'Invalid account') {\n              setErrors({\n                loginUsername: 'Unrecognized username'\n              });\n            } else if (responseData.error === 'Incorrect password') {\n              setErrors({\n                loginPassword: 'Incorrect password'\n              });\n            }\n          } else {\n            setSuccess('Sucessful login');\n            handleLogin(responseData.token);\n            navigate(\"/\");\n          }\n        } catch (error) {\n          console.error('Error:', error);\n        }\n      }\n    } else {\n      const validationErrors = {};\n      const usernameToClear = formData.registerUsername;\n      const emailToClear = formData.registerEmail;\n      const passwordToClear = formData.registerPassword;\n      const regPasswordToClear = formData.confirmRegisterPassword;\n      if (!emailToClear) {\n        validationErrors.registerEmail = 'E-mail is required';\n      }\n      if (!usernameToClear) {\n        validationErrors.registerUsername = 'Username is required';\n      } else if (usernameToClear.match(/^[^a-zA-Z0-9]+$/)) {\n        validationErrors.registerUsername = 'Username cannot contain symbols';\n      } else if (usernameToClear.trim().length < 8) {\n        validationErrors.registerUsername = 'Minimum length is 8 symbols';\n      } else if (usernameToClear.trim().length > 30) {\n        validationErrors.registerUsername = 'Maximum length is 8 symbols';\n      }\n      if (!passwordToClear) {\n        validationErrors.registerPassword = 'Password is required';\n      } else if (passwordToClear.trim().length < 8) {\n        validationErrors.registerPassword = 'Minimum length is 8 symbols';\n      }\n      if (!regPasswordToClear) {\n        validationErrors.confirmRegisterPassword = 'Confirmation is required';\n      } else if (regPasswordToClear !== passwordToClear) {\n        validationErrors.confirmRegisterPassword = 'Passwords do not match';\n      } else if (regPasswordToClear.trim().length < 8) {\n        validationErrors.confirmRegisterPassword = 'Minimum length is 8 symbols';\n      }\n      setErrors(validationErrors);\n      if (Object.keys(validationErrors).length === 0) {\n        setErrors({});\n        // console.log(formData);\n        try {\n          const response = await fetch('http://localhost/api/register', {\n            method: 'POST',\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(formData)\n          });\n          const responseData = await response.json();\n          if (!response.ok) {\n            setErrors(responseData.errors);\n            setSuccess('');\n          } else {\n            setSuccess(responseData.message);\n          }\n        } catch (error) {\n          console.error('Error:', error);\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `w-screen h-screen fixed top-0 left-0 bg-black bg-opacity-40 z-40 transition-opacity duration-300 ${isPasswordModalOpen ? \"opacity-100\" : \"opacity-0 pointer-events-none\"}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `border-[3px] text-white border-neutral-300 bg-[#181a1b] shadow-lg sm:ml-0 md:ml-0 lg:ml-0 lg:ml-0 min-h-[300px] xl:w-[500px] lg:w-[500px] md:w-[500px] sm:w-[500px] max-[425px]:w-[400px] max-[375px]:w-[350px] max-[325px]:w-[310px]  w-[400px] font-light rounded-md shadow-lg mb-4 max-[769px]:mt-[24px] mt-[48px] absolute -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full min-h-full flex flex-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rounded-full w-20 h-20 bg-[rgb(26,28,29)] absolute -top-8 -right-8 max-[426px]:hidden transform bg-[rgb(236,236,236,1)]\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            strokeWidth: 0.8,\n            stroke: \"white\",\n            className: \"w-25 h-28 absolute top-10 left-1/2 transform -translate-x-1/2 -translate-y-1/2 z-50 rounded-full\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              d: \"M17.982 18.725A7.488 7.488 0 0 0 12 15.75a7.488 7.488 0 0 0-5.982 2.975m11.963 0a9 9 0 1 0-11.963 0m11.963 0A8.966 8.966 0 0 1 12 21a8.966 8.966 0 0 1-5.982-2.275M15 9.75a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"w-full min-h-full flex flex-col justify-center items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-[95%]\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-2xl tracking-widest my-1\",\n              children: \"Change your password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"font-light text-lg uppercase text-[rgb(175,169,158)] mb-4 mt-2\",\n              children: \"Enter your new password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-[90%]\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"ml-3 text-lg uppercase tracking-widest\",\n              htmlFor: \"password\",\n              children: \"Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(PasswordToggle, {\n              id: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-[90%]\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"ml-3 text-lg uppercase tracking-widest\",\n              htmlFor: \"confirmPassword\",\n              children: \"Confirm Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(PasswordToggle, {\n              id: \"confirmPassword\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"mt-4 w-[75%] my-2 h-10 bg-[rgb(33,36,37)] hover:bg-[rgb(39,42,43)] hover:border-neutral-200 focus:border-2 border-neutral-600 border text-white text-2xl rounded-sm duration-500 hover:scale-105 cursor-pointer\",\n            type: \"submit\",\n            value: \"Change\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(ProfileChangePassword, \"aEyO+Oy+10kD6eZHvR40PwCev3E=\");\n_c = ProfileChangePassword;\nexport default ProfileChangePassword;\nvar _c;\n$RefreshReg$(_c, \"ProfileChangePassword\");","map":{"version":3,"names":["React","useState","useEffect","PasswordToggle","jsxDEV","_jsxDEV","Fragment","_Fragment","ProfileChangePassword","_s","isPasswordModalOpen","setIsPasswordModalOpen","toggleMobileMenu","handleSubmitForm","e","preventDefault","formData","username","target","value","trim","password","registerEmail","registerUsername","registerPassword","confirmRegisterPassword","isLoginForm","validationErrors","usernameToClear","passwordToClear","loginUsername","loginPassword","setErrors","Object","keys","length","response","fetch","method","headers","body","JSON","stringify","responseData","json","ok","console","error","setSuccess","handleLogin","token","navigate","emailToClear","regPasswordToClear","match","errors","message","children","className","fileName","_jsxFileName","lineNumber","columnNumber","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","htmlFor","id","type","_c","$RefreshReg$"],"sources":["/Users/alekssvelvelis/Desktop/memory-game/src/components/ProfileChangePassword.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PasswordToggle from './PasswordToggle';\nfunction ProfileChangePassword(){\n    const [isPasswordModalOpen, setIsPasswordModalOpen] = useState(false);\n\n    const toggleMobileMenu = () => {\n        setIsPasswordModalOpen(!isPasswordModalOpen);\n    };\n    const handleSubmitForm = async (e) => {\n        e.preventDefault();\n    \n        const formData = {\n            username: e.target.username ? e.target.username.value.trim() : '',\n            password: e.target.password ? e.target.password.value.trim() : '',\n            registerEmail: e.target.registerEmail ? e.target.registerEmail.value.trim() : '',\n            registerUsername: e.target.registerUsername ? e.target.registerUsername.value.trim() : '',\n            registerPassword: e.target.registerPassword ? e.target.registerPassword.value.trim() : '',\n            confirmRegisterPassword: e.target.confirmRegisterPassword ? e.target.confirmRegisterPassword.value.trim() : '',\n        };\n    \n        if (isLoginForm) {\n            const validationErrors = {};\n    \n            const usernameToClear = formData.username;\n            const passwordToClear = formData.password;\n    \n            if (!usernameToClear) {\n                validationErrors.loginUsername = 'Username is required';\n            }\n            if (!passwordToClear) {\n                validationErrors.loginPassword = 'Password is required';\n            }\n    \n            setErrors(validationErrors);\n    \n            if (Object.keys(validationErrors).length === 0) {\n                setErrors({});\n                // console.log(formData);\n                try{\n                    const response = await fetch('http://localhost/api/login', {\n                        method: 'POST',\n                        headers: {\n                            \"Content-Type\": \"application/json\",\n                        },\n                        body: JSON.stringify(formData),\n                    });\n                    const responseData = await response.json();\n                    if (!response.ok) {\n                        console.error('Error:', responseData.error);\n                        if (responseData.error === 'Invalid account') {\n                            setErrors({ loginUsername: 'Unrecognized username' });\n                        } else if (responseData.error === 'Incorrect password') {\n                            setErrors({ loginPassword: 'Incorrect password' });\n                        }\n                    } else {\n                        setSuccess('Sucessful login');\n                        handleLogin(responseData.token);\n                        navigate(\"/\");\n    \n                    }\n                } catch (error) {\n                    console.error('Error:', error);\n                }\n            }\n    \n        } else {\n            const validationErrors = {};\n            const usernameToClear = formData.registerUsername;\n            const emailToClear = formData.registerEmail;\n            const passwordToClear = formData.registerPassword;\n            const regPasswordToClear = formData.confirmRegisterPassword;\n    \n            if (!emailToClear) {\n                validationErrors.registerEmail = 'E-mail is required';\n            }\n\n            if (!usernameToClear) {\n                validationErrors.registerUsername = 'Username is required';\n            } else if (usernameToClear.match(/^[^a-zA-Z0-9]+$/)){\n                validationErrors.registerUsername = 'Username cannot contain symbols';\n            } else if(usernameToClear.trim().length < 8){\n                validationErrors.registerUsername = 'Minimum length is 8 symbols';\n            } else if(usernameToClear.trim().length > 30){\n                validationErrors.registerUsername = 'Maximum length is 8 symbols';\n            }\n    \n            if (!passwordToClear) {\n                validationErrors.registerPassword = 'Password is required';\n            } else if (passwordToClear.trim().length < 8){\n                validationErrors.registerPassword = 'Minimum length is 8 symbols';\n            }\n    \n            if (!regPasswordToClear) {\n                validationErrors.confirmRegisterPassword = 'Confirmation is required';\n            } else if (regPasswordToClear !== passwordToClear) {\n                validationErrors.confirmRegisterPassword = 'Passwords do not match';\n            } else if(regPasswordToClear.trim().length < 8){\n                validationErrors.confirmRegisterPassword = 'Minimum length is 8 symbols';\n            }\n            \n            setErrors(validationErrors);\n            \n            if (Object.keys(validationErrors).length === 0) {\n                setErrors({});\n                // console.log(formData);\n                try{\n                    const response = await fetch('http://localhost/api/register', {\n                        method: 'POST',\n                        headers: {\n                            \"Content-Type\": \"application/json\",\n                        },\n                        body: JSON.stringify(formData),\n                    });\n                    const responseData = await response.json();\n                    if (!response.ok) {\n                        setErrors(responseData.errors);\n                        setSuccess('');\n                    }else{\n                        setSuccess(responseData.message);\n                    }\n                } catch (error) {\n                    console.error('Error:', error);\n                }\n            }\n        }\n      };\n    return(\n        <>\n        <div className={`w-screen h-screen fixed top-0 left-0 bg-black bg-opacity-40 z-40 transition-opacity duration-300 ${isPasswordModalOpen ? \"opacity-100\" : \"opacity-0 pointer-events-none\"}`}></div>\n        <div className={`border-[3px] text-white border-neutral-300 bg-[#181a1b] shadow-lg sm:ml-0 md:ml-0 lg:ml-0 lg:ml-0 min-h-[300px] xl:w-[500px] lg:w-[500px] md:w-[500px] sm:w-[500px] max-[425px]:w-[400px] max-[375px]:w-[350px] max-[325px]:w-[310px]  w-[400px] font-light rounded-md shadow-lg mb-4 max-[769px]:mt-[24px] mt-[48px] absolute -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2`}>\n            <div className='w-full min-h-full flex flex-wrap'>\n                    <div className='rounded-full w-20 h-20 bg-[rgb(26,28,29)] absolute -top-8 -right-8 max-[426px]:hidden transform bg-[rgb(236,236,236,1)]'>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={0.8} stroke=\"white\" className=\"w-25 h-28 absolute top-10 left-1/2 transform -translate-x-1/2 -translate-y-1/2 z-50 rounded-full\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M17.982 18.725A7.488 7.488 0 0 0 12 15.75a7.488 7.488 0 0 0-5.982 2.975m11.963 0a9 9 0 1 0-11.963 0m11.963 0A8.966 8.966 0 0 1 12 21a8.966 8.966 0 0 1-5.982-2.275M15 9.75a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z\" />\n                        </svg>\n                    </div>\n                    <form className='w-full min-h-full flex flex-col justify-center items-center'>\n                        <div className='w-[95%]'>\n                            <h1 className='text-2xl tracking-widest my-1'>Change your password:</h1>\n                            <p className='font-light text-lg uppercase text-[rgb(175,169,158)] mb-4 mt-2'>Enter your new password</p>\n                        </div>\n                        <div className='w-[90%]'>\n                            <label className='ml-3 text-lg uppercase tracking-widest' htmlFor='password'>Password:</label>\n                            <PasswordToggle id='password'/>\n                        </div>\n                        <div className='w-[90%]'>\n                        <label className='ml-3 text-lg uppercase tracking-widest' htmlFor='confirmPassword'>Confirm Password:</label>\n                            <PasswordToggle id='confirmPassword'/>\n                        </div>\n                        <input className='mt-4 w-[75%] my-2 h-10 bg-[rgb(33,36,37)] hover:bg-[rgb(39,42,43)] hover:border-neutral-200 focus:border-2 border-neutral-600 border text-white text-2xl rounded-sm duration-500 hover:scale-105 cursor-pointer' type='submit' value='Change' />\n                    </form>\n            </div>\n        </div>\n        </>\n    );\n}\n\nexport default ProfileChangePassword;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}