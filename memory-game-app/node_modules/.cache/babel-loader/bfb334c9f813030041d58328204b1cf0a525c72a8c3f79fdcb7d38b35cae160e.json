{"ast":null,"code":"var _jsxFileName = \"/Users/alekssvelvelis/Desktop/memory-game/src/components/MemoryGame.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst shuffleArray = array => {\n  const shuffledArray = [...array];\n  for (let i = shuffledArray.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]];\n  }\n  return shuffledArray;\n};\nconst generateCards = difficulty => {\n  const symbols = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L'];\n  const cardCount = difficulty * difficulty;\n  const pairsCount = cardCount / 3; // Assuming you want 3 matching pairs for each difficulty\n  const jokerCount = cardCount % 3;\n\n  // Create an array with pairs of symbols\n  let cards = symbols.slice(0, pairsCount).flatMap(symbol => Array(3).fill(symbol));\n\n  // Add joker cards\n  cards = cards.concat(Array(jokerCount).fill('Joker'));\n\n  // Double the cards to create pairs\n\n  // Shuffle the cards\n  return shuffleArray(cards);\n};\nconst Card = ({\n  content,\n  isFlipped,\n  isMatched,\n  onClick\n}) => {\n  return (\n    /*#__PURE__*/\n    // <div className='group rounded-xl h-48 w-48 [perspective:1000px]'>\n    //     <div className=\"relative h-full w-full rounded-xl shadow-xl transition-all duration-500 [transform-style:preserve-3d] group-hover:[transform:rotateY(180deg)]\">\n    //         <div className='absolute inset-0'>\n    //             {/* <div className='h-full w-full rounded-xl object-cover shadow-xl shadow-black/40' >{content}</div> */}\n    //             <img className='w-full h-full rounded-xl object-cover shadow-xl shadow-black/40' src=\"https://i.loli.net/2019/10/18/buDT4YS6zUMfHst.jpg\" />\n    //         </div>\n    //         <div className=\"absolute inset-0 w-full h-full rounded-xl object-cover text-center text-slate-200 [transform:rotateY(180deg)] [backface-visibility:hidden]\">\n    //             <img className='w-screen h-full rounded-xl' src=\"https://i.loli.net/2019/11/16/FLnzi5Kq4tkRZSm.jpg\" />\n    //         </div>\n    //     </div>\n    // </div>\n    // <div\n    //   className={`group rounded-xl h-24 w-24 m-4 [perspective:1000px]`}\n    //   onClick={() => !isMatched && onClick()} // Make unclickable if matched\n    //   style={{\n    //     opacity: isMatched ? 0.5 : 1, // Decrease opacity if matched\n    //   }}\n    // >\n    // <div className={`relative bg-red-500 h-full w-full items-center justify-center flex rounded-xl shadow-xl transition-all text-slate-200 duration-500 [transform-style:preserve-3d] ${isFlipped && !isMatched ? '[transform:rotateY(180deg)]' : (isMatched ? 'bg-green-500' : '')}`}>\n    //       {!isFlipped && ''}\n    //       <div className={`absolute bg-red-500 inset-0 w-full h-full rounded-xl items-center justify-center flex object-cover text-center text-slate-200 [transform-style:preserve-3d] [backface-visibility:hidden]`}>\n    //       {isFlipped && !isMatched ? '' : content}\n    //     </div>\n    //   </div>\n    // </div>\n    // <div\n    //   className={`group rounded-xl h-24 w-24 m-4 [perspective:1000px]`}\n    //   onClick={() => !isMatched && onClick()} // Make unclickable if matched\n    //   style={{\n    //     opacity: isMatched ? 0.5 : 1, // Decrease opacity if matched\n    //   }}\n    // >\n    //   <div className={`relative bg-red-500 h-full w-full rounded-xl items-center justify-center flex shadow-xl transition-all text-slate-200 duration-500 transition [transform-style:preserve-3d] ${isFlipped && !isMatched ? '[transform:rotateY(360deg)]' : (isMatched ? 'bg-green-500' : '')}`}>\n    //     {!isFlipped && !isMatched ? '' : content}\n    //   </div>\n    // </div>\n    _jsxDEV(\"div\", {\n      className: `group rounded-xl h-48 w-48 [perspective:1000px]`,\n      onClick: () => !isMatched && onClick() // Make unclickable if matched\n      ,\n      style: {\n        opacity: isMatched ? 0.5 : 1 // Decrease opacity if matched\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `relative h-full w-full rounded-xl shadow-xl transition-all duration-500 [transform-style:preserve-3d] ${isFlipped && !isMatched ? '[transform:rotateY(180deg)]' : isMatched ? 'bg-green-500' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute inset-0\",\n          children: isFlipped && !isMatched ? '' : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-full w-full rounded-xl object-cover shadow-xl shadow-black/40\",\n            children: content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute inset-0 w-full h-full rounded-xl object-cover text-center text-slate-200 [transform:rotateY(180deg)] [backface-visibility:hidden]\",\n          children: isFlipped && !isMatched ? /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"w-screen h-full rounded-xl\",\n            src: \"https://i.loli.net/2019/11/16/FLnzi5Kq4tkRZSm.jpg\",\n            alt: \"Back of the card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 38\n          }, this) : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, this)\n  );\n};\n_c = Card;\nconst MemoryGame = ({\n  difficulty\n}) => {\n  _s();\n  const [cards, setCards] = useState(generateCards(difficulty));\n  const [flippedIndices, setFlippedIndices] = useState([]);\n  const [matchedCards, setMatchedCards] = useState([]);\n  const flippedIndicesRef = useRef(flippedIndices);\n  const matchedCardsRef = useRef(matchedCards);\n  useEffect(() => {\n    flippedIndicesRef.current = flippedIndices;\n    matchedCardsRef.current = matchedCards;\n  }, [flippedIndices, matchedCards]);\n  useEffect(() => {\n    // Shuffle the cards when the component mounts or when the game restarts\n    setCards(generateCards(difficulty));\n    setFlippedIndices([]);\n    setMatchedCards([]);\n  }, [difficulty]);\n  const handleCardClick = index => {\n    // Check if the clicked card is already flipped\n    if (flippedIndicesRef.current.includes(index) || flippedIndicesRef.current.length === 3 || matchedCardsRef.current.some(matched => matched.indexes.includes(index))) {\n      return;\n    }\n\n    // Flip the clicked card\n    setFlippedIndices([...flippedIndicesRef.current, index]);\n    if (flippedIndicesRef.current.length === 2) {\n      // Check for a match\n      const card1 = cards[flippedIndicesRef.current[0]];\n      const card2 = cards[flippedIndicesRef.current[1]];\n      const card3 = cards[index];\n      if (card1 === card2 && card2 === card3) {\n        const matchedContent = [card1, card2, card3];\n        const matchedIndexes = [...flippedIndicesRef.current, index];\n        setMatchedCards(prevMatchedCards => [...prevMatchedCards, {\n          content: matchedContent,\n          indexes: matchedIndexes\n        }]);\n        console.log('cards matched');\n      } else {\n        console.log('cards mismatched');\n      }\n\n      // Reset flippedIndices after checking for a match\n      setTimeout(() => {\n        setFlippedIndices([]);\n      }, 1000);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-wrap\",\n    children: cards.map((symbol, index) => /*#__PURE__*/_jsxDEV(Card, {\n      content: symbol,\n      isFlipped: flippedIndices.includes(index),\n      isMatched: matchedCards.some(matched => matched.indexes.includes(index)),\n      onClick: () => handleCardClick(index)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 3\n  }, this);\n};\n_s(MemoryGame, \"vrktRu4OCykKOyEt2Qe4C25JxvM=\");\n_c2 = MemoryGame;\nexport default MemoryGame;\nvar _c, _c2;\n$RefreshReg$(_c, \"Card\");\n$RefreshReg$(_c2, \"MemoryGame\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","shuffleArray","array","shuffledArray","i","length","j","Math","floor","random","generateCards","difficulty","symbols","cardCount","pairsCount","jokerCount","cards","slice","flatMap","symbol","Array","fill","concat","Card","content","isFlipped","isMatched","onClick","className","style","opacity","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","MemoryGame","_s","setCards","flippedIndices","setFlippedIndices","matchedCards","setMatchedCards","flippedIndicesRef","matchedCardsRef","current","handleCardClick","index","includes","some","matched","indexes","card1","card2","card3","matchedContent","matchedIndexes","prevMatchedCards","console","log","setTimeout","map","_c2","$RefreshReg$"],"sources":["/Users/alekssvelvelis/Desktop/memory-game/src/components/MemoryGame.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nconst shuffleArray = (array) => {\n  const shuffledArray = [...array];\n  for (let i = shuffledArray.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]];\n  }\n  return shuffledArray;\n};\n\nconst generateCards = (difficulty) => {\n  const symbols = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L'];\n  const cardCount = difficulty * difficulty;\n  const pairsCount = cardCount / 3; // Assuming you want 3 matching pairs for each difficulty\n  const jokerCount = cardCount % 3;\n\n  // Create an array with pairs of symbols\n  let cards = symbols.slice(0, pairsCount).flatMap((symbol) => Array(3).fill(symbol));\n\n  // Add joker cards\n  cards = cards.concat(Array(jokerCount).fill('Joker'));\n\n  // Double the cards to create pairs\n\n  // Shuffle the cards\n  return shuffleArray(cards);\n};\n\nconst Card = ({ content, isFlipped, isMatched, onClick }) => {\n  return (\n    // <div className='group rounded-xl h-48 w-48 [perspective:1000px]'>\n    //     <div className=\"relative h-full w-full rounded-xl shadow-xl transition-all duration-500 [transform-style:preserve-3d] group-hover:[transform:rotateY(180deg)]\">\n    //         <div className='absolute inset-0'>\n    //             {/* <div className='h-full w-full rounded-xl object-cover shadow-xl shadow-black/40' >{content}</div> */}\n    //             <img className='w-full h-full rounded-xl object-cover shadow-xl shadow-black/40' src=\"https://i.loli.net/2019/10/18/buDT4YS6zUMfHst.jpg\" />\n    //         </div>\n    //         <div className=\"absolute inset-0 w-full h-full rounded-xl object-cover text-center text-slate-200 [transform:rotateY(180deg)] [backface-visibility:hidden]\">\n    //             <img className='w-screen h-full rounded-xl' src=\"https://i.loli.net/2019/11/16/FLnzi5Kq4tkRZSm.jpg\" />\n    //         </div>\n    //     </div>\n    // </div>\n\n    // <div\n    //   className={`group rounded-xl h-24 w-24 m-4 [perspective:1000px]`}\n    //   onClick={() => !isMatched && onClick()} // Make unclickable if matched\n    //   style={{\n    //     opacity: isMatched ? 0.5 : 1, // Decrease opacity if matched\n    //   }}\n    // >\n    // <div className={`relative bg-red-500 h-full w-full items-center justify-center flex rounded-xl shadow-xl transition-all text-slate-200 duration-500 [transform-style:preserve-3d] ${isFlipped && !isMatched ? '[transform:rotateY(180deg)]' : (isMatched ? 'bg-green-500' : '')}`}>\n    //       {!isFlipped && ''}\n    //       <div className={`absolute bg-red-500 inset-0 w-full h-full rounded-xl items-center justify-center flex object-cover text-center text-slate-200 [transform-style:preserve-3d] [backface-visibility:hidden]`}>\n    //       {isFlipped && !isMatched ? '' : content}\n    //     </div>\n    //   </div>\n    // </div>\n\n    // <div\n    //   className={`group rounded-xl h-24 w-24 m-4 [perspective:1000px]`}\n    //   onClick={() => !isMatched && onClick()} // Make unclickable if matched\n    //   style={{\n    //     opacity: isMatched ? 0.5 : 1, // Decrease opacity if matched\n    //   }}\n    // >\n    //   <div className={`relative bg-red-500 h-full w-full rounded-xl items-center justify-center flex shadow-xl transition-all text-slate-200 duration-500 transition [transform-style:preserve-3d] ${isFlipped && !isMatched ? '[transform:rotateY(360deg)]' : (isMatched ? 'bg-green-500' : '')}`}>\n    //     {!isFlipped && !isMatched ? '' : content}\n    //   </div>\n    // </div>\n    <div\n      className={`group rounded-xl h-48 w-48 [perspective:1000px]`}\n      onClick={() => !isMatched && onClick()} // Make unclickable if matched\n      style={{\n        opacity: isMatched ? 0.5 : 1, // Decrease opacity if matched\n      }}\n    >\n      <div className={`relative h-full w-full rounded-xl shadow-xl transition-all duration-500 [transform-style:preserve-3d] ${isFlipped && !isMatched ? '[transform:rotateY(180deg)]' : (isMatched ? 'bg-green-500' : '')}`}>\n        <div className='absolute inset-0'>\n          {isFlipped && !isMatched ? '' : <div className='h-full w-full rounded-xl object-cover shadow-xl shadow-black/40'>{content}</div>}\n        </div>\n        <div className=\"absolute inset-0 w-full h-full rounded-xl object-cover text-center text-slate-200 [transform:rotateY(180deg)] [backface-visibility:hidden]\">\n          {isFlipped && !isMatched ? <img className='w-screen h-full rounded-xl' src=\"https://i.loli.net/2019/11/16/FLnzi5Kq4tkRZSm.jpg\" alt=\"Back of the card\" /> : ''}\n        </div>\n      </div>\n    </div>\n\n  );\n};\n\nconst MemoryGame = ({ difficulty }) => {\n  const [cards, setCards] = useState(generateCards(difficulty));\n  const [flippedIndices, setFlippedIndices] = useState([]);\n  const [matchedCards, setMatchedCards] = useState([]);\n  const flippedIndicesRef = useRef(flippedIndices);\n  const matchedCardsRef = useRef(matchedCards);\n\n  useEffect(() => {\n    flippedIndicesRef.current = flippedIndices;\n    matchedCardsRef.current = matchedCards;\n  }, [flippedIndices, matchedCards]);\n\n  useEffect(() => {\n    // Shuffle the cards when the component mounts or when the game restarts\n    setCards(generateCards(difficulty));\n    setFlippedIndices([]);\n    setMatchedCards([]);\n  }, [difficulty]);\n\n  const handleCardClick = (index) => {\n    // Check if the clicked card is already flipped\n    if (\n      flippedIndicesRef.current.includes(index) ||\n      flippedIndicesRef.current.length === 3 ||\n      matchedCardsRef.current.some((matched) => matched.indexes.includes(index))\n    ) {\n      return;\n    }\n\n    // Flip the clicked card\n    setFlippedIndices([...flippedIndicesRef.current, index]);\n\n    if (flippedIndicesRef.current.length === 2) {\n      // Check for a match\n      const card1 = cards[flippedIndicesRef.current[0]];\n      const card2 = cards[flippedIndicesRef.current[1]];\n      const card3 = cards[index];\n\n      if (card1 === card2 && card2 === card3) {\n        const matchedContent = [card1, card2, card3];\n        const matchedIndexes = [...flippedIndicesRef.current, index];\n        setMatchedCards((prevMatchedCards) => [\n          ...prevMatchedCards,\n          { content: matchedContent, indexes: matchedIndexes },\n        ]);\n        console.log('cards matched');\n      } else {\n        console.log('cards mismatched');\n      }\n\n      // Reset flippedIndices after checking for a match\n      setTimeout(() => {\n        setFlippedIndices([]);\n      }, 1000);\n    }\n  };\n  \n\n  return (\n  <div className='flex flex-wrap'>\n    {cards.map((symbol, index) => (\n        <Card\n          key={index}\n          content={symbol}\n          isFlipped={flippedIndices.includes(index)}\n          isMatched={matchedCards.some((matched) => matched.indexes.includes(index))}\n          onClick={() => handleCardClick(index)}\n        />\n      ))}\n  </div>\n);\n};\n\nexport default MemoryGame;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}