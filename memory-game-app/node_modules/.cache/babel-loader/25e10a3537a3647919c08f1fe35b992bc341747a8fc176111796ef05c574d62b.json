{"ast":null,"code":"import React,{useState,useEffect}from'react';import Header from'../Header';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const DifficultySelector=_ref=>{let{onSelectDifficulty,theme,handleResetTheme}=_ref;const isLoggedInObject=localStorage.getItem('token');const isLoggedIn=isLoggedInObject?JSON.parse(isLoggedInObject).value:null;const[userClearedLevels,setUserClearedLevels]=useState([]);const[selectedDifficulty,setSelectedDifficulty]=useState(3);const[allDifficultyLevels,setAllDifficultyLevels]=useState([3,4,5,6,7]);useEffect(()=>{const fetchUserClearedLevels=async()=>{try{const response=await fetch(\"http://localhost/api/getClearedLevels?theme=\".concat(theme),{method:'GET',headers:{'Authorization':\"Bearer \".concat(isLoggedIn)}});const responseData=await response.json();if(!response.ok){console.error('Error:',responseData);}else{setUserClearedLevels(responseData.cleared_levels);}}catch(error){console.error('Error:',error);}};fetchUserClearedLevels();},[isLoggedIn,theme]);let maxUnlockedDifficulty=3;if(userClearedLevels.length>0){const maxClearedDifficulty=Math.max(...userClearedLevels.map(level=>level.difficulty));maxUnlockedDifficulty=maxClearedDifficulty+1;}const unlockedLevels=allDifficultyLevels.filter(difficulty=>difficulty<=maxUnlockedDifficulty);const handleStartGame=()=>{onSelectDifficulty(selectedDifficulty);};const resetTheme=()=>{handleResetTheme();};const getDifficultyName=difficulty=>{switch(difficulty){case 3:return'Beginner';case 4:return'Intermediate';case 5:return'Advanced';case 6:return'Expert';case 7:return'Master';default:return'Unknown';}};const getDifficultyColor=difficulty=>{switch(difficulty){case 3:return'#C564D2';case 4:return'#9E35B5';case 5:return'#720E98';case 6:return'#4D0A76';case 7:return'#320652';default:return'Unknown';}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Header,{onPlayClick:resetTheme}),/*#__PURE__*/_jsx(\"div\",{className:\"overflow-y-scroll min-h-screen bg-[rgb(18,18,18,0.9)] flex items-center justify-center w-full text-white\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"h-full w-[95%] flex flex-col justify-center items-center\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"uppercase font-light tracking-widest text-2xl my-4 z-[1]\",children:\"Select Difficulty:\"}),allDifficultyLevels.map(difficulty=>/*#__PURE__*/_jsx(\"div\",{className:\"w-[300px] transition-all transform duration-500 \".concat(unlockedLevels.includes(difficulty)?'hover:scale-105 cursor-pointer':'',\" \").concat(selectedDifficulty===difficulty?'scale-105':'',\" relative m-2 border border-neutral-200\"),style:{backgroundColor:selectedDifficulty===difficulty?getDifficultyColor(difficulty):'',opacity:unlockedLevels.includes(difficulty)?'1':'0.5'// Adjust opacity based on whether the level is unlocked\n},onClick:()=>{if(unlockedLevels.includes(difficulty)){setSelectedDifficulty(difficulty);}},children:/*#__PURE__*/_jsx(\"div\",{className:\"w-full text-2xl \".concat(selectedDifficulty===difficulty?'opacity-100':'opacity-80'),children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"h1\",{className:\"text-center uppercase font-light tracking-widest\",children:getDifficultyName(difficulty)})})})},difficulty)),/*#__PURE__*/_jsx(\"button\",{className:\"w-fit z-[10] mt-2 text-xl hover:bg-white hover:text-black duration-500 transition-bg cursor-pointer p-1 rounded-sm uppercase tracking-widest\",onClick:handleStartGame,children:\"Start Game\"})]})})]});};export default DifficultySelector;","map":{"version":3,"names":["React","useState","useEffect","Header","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","DifficultySelector","_ref","onSelectDifficulty","theme","handleResetTheme","isLoggedInObject","localStorage","getItem","isLoggedIn","JSON","parse","value","userClearedLevels","setUserClearedLevels","selectedDifficulty","setSelectedDifficulty","allDifficultyLevels","setAllDifficultyLevels","fetchUserClearedLevels","response","fetch","concat","method","headers","responseData","json","ok","console","error","cleared_levels","maxUnlockedDifficulty","length","maxClearedDifficulty","Math","max","map","level","difficulty","unlockedLevels","filter","handleStartGame","resetTheme","getDifficultyName","getDifficultyColor","children","onPlayClick","className","includes","style","backgroundColor","opacity","onClick"],"sources":["/Users/alekssvelvelis/Desktop/memory-game/src/components/StartGame/DifficultySelector.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Header from '../Header';\nconst DifficultySelector = ({ onSelectDifficulty, theme, handleResetTheme }) => {\n  const isLoggedInObject = localStorage.getItem('token');\n  const isLoggedIn = isLoggedInObject ? JSON.parse(isLoggedInObject).value : null;\n  const [userClearedLevels, setUserClearedLevels] = useState([]);\n  const [selectedDifficulty, setSelectedDifficulty] = useState(3);\n  const [allDifficultyLevels, setAllDifficultyLevels] = useState([3, 4, 5, 6, 7]);\n\n  useEffect(() => {\n    const fetchUserClearedLevels = async () => {\n      try {\n        const response = await fetch(`http://localhost/api/getClearedLevels?theme=${theme}`, {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${isLoggedIn}`\n          },\n        });\n        const responseData = await response.json();\n        if (!response.ok) {\n          console.error('Error:', responseData);\n        } else {\n          setUserClearedLevels(responseData.cleared_levels);\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    };\n\n    fetchUserClearedLevels();\n  }, [isLoggedIn, theme]);\n  let maxUnlockedDifficulty = 3;\n  if (userClearedLevels.length > 0) {\n    const maxClearedDifficulty = Math.max(...userClearedLevels.map(level => level.difficulty));\n    maxUnlockedDifficulty = maxClearedDifficulty + 1;\n  }\n  const unlockedLevels = allDifficultyLevels.filter(difficulty => difficulty <= maxUnlockedDifficulty);\n\n  const handleStartGame = () => {\n    onSelectDifficulty(selectedDifficulty);\n  };\n\n  const resetTheme = () => {\n    handleResetTheme();\n  };\n\n  const getDifficultyName = (difficulty) => {\n    switch (difficulty) {\n      case 3:\n        return 'Beginner';\n      case 4:\n        return 'Intermediate';\n      case 5:\n        return 'Advanced';\n      case 6:\n        return 'Expert';\n      case 7:\n        return 'Master';\n      default:\n        return 'Unknown';\n    }\n  };\n\n  const getDifficultyColor = (difficulty) => {\n    switch (difficulty) {\n      case 3:\n        return '#C564D2';\n      case 4:\n        return '#9E35B5';\n      case 5:\n        return '#720E98';\n      case 6:\n        return '#4D0A76';\n      case 7:\n        return '#320652';\n      default:\n        return 'Unknown';\n    }\n  };\n\n  return (\n    <>\n      <Header onPlayClick={resetTheme} />\n      <div className=\"overflow-y-scroll min-h-screen bg-[rgb(18,18,18,0.9)] flex items-center justify-center w-full text-white\">\n        <div className='h-full w-[95%] flex flex-col justify-center items-center'>\n          <label className='uppercase font-light tracking-widest text-2xl my-4 z-[1]'>Select Difficulty:</label>\n          \n          {allDifficultyLevels.map((difficulty) => (\n            <div\n              key={difficulty}\n              className={`w-[300px] transition-all transform duration-500 ${\n                unlockedLevels.includes(difficulty) ? 'hover:scale-105 cursor-pointer' : ''\n              } ${selectedDifficulty === difficulty ? 'scale-105' : ''} relative m-2 border border-neutral-200`}\n              style={{ \n                backgroundColor: selectedDifficulty === difficulty ? getDifficultyColor(difficulty) : '',\n                opacity: unlockedLevels.includes(difficulty) ? '1' : '0.5', // Adjust opacity based on whether the level is unlocked\n              }}\n              onClick={() => {\n                if (unlockedLevels.includes(difficulty)) {\n                  setSelectedDifficulty(difficulty);\n                }\n              }}\n            >\n              <div className={`w-full text-2xl ${selectedDifficulty === difficulty ? 'opacity-100' : 'opacity-80'}`}>\n                <div>\n                  <h1 className='text-center uppercase font-light tracking-widest'>\n                    {getDifficultyName(difficulty)}\n                  </h1>\n                </div>\n              </div>\n            </div>\n          ))}\n          <button className='w-fit z-[10] mt-2 text-xl hover:bg-white hover:text-black duration-500 transition-bg cursor-pointer p-1 rounded-sm uppercase tracking-widest' onClick={handleStartGame}>Start Game</button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default DifficultySelector;\n\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,MAAM,KAAM,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAC/B,KAAM,CAAAC,kBAAkB,CAAGC,IAAA,EAAqD,IAApD,CAAEC,kBAAkB,CAAEC,KAAK,CAAEC,gBAAiB,CAAC,CAAAH,IAAA,CACzE,KAAM,CAAAI,gBAAgB,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CACtD,KAAM,CAAAC,UAAU,CAAGH,gBAAgB,CAAGI,IAAI,CAACC,KAAK,CAACL,gBAAgB,CAAC,CAACM,KAAK,CAAG,IAAI,CAC/E,KAAM,CAACC,iBAAiB,CAAEC,oBAAoB,CAAC,CAAGtB,QAAQ,CAAC,EAAE,CAAC,CAC9D,KAAM,CAACuB,kBAAkB,CAAEC,qBAAqB,CAAC,CAAGxB,QAAQ,CAAC,CAAC,CAAC,CAC/D,KAAM,CAACyB,mBAAmB,CAAEC,sBAAsB,CAAC,CAAG1B,QAAQ,CAAC,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAAC,CAE/EC,SAAS,CAAC,IAAM,CACd,KAAM,CAAA0B,sBAAsB,CAAG,KAAAA,CAAA,GAAY,CACzC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,gDAAAC,MAAA,CAAgDlB,KAAK,EAAI,CACnFmB,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACP,eAAe,WAAAF,MAAA,CAAYb,UAAU,CACvC,CACF,CAAC,CAAC,CACF,KAAM,CAAAgB,YAAY,CAAG,KAAM,CAAAL,QAAQ,CAACM,IAAI,CAAC,CAAC,CAC1C,GAAI,CAACN,QAAQ,CAACO,EAAE,CAAE,CAChBC,OAAO,CAACC,KAAK,CAAC,QAAQ,CAAEJ,YAAY,CAAC,CACvC,CAAC,IAAM,CACLX,oBAAoB,CAACW,YAAY,CAACK,cAAc,CAAC,CACnD,CACF,CAAE,MAAOD,KAAK,CAAE,CACdD,OAAO,CAACC,KAAK,CAAC,QAAQ,CAAEA,KAAK,CAAC,CAChC,CACF,CAAC,CAEDV,sBAAsB,CAAC,CAAC,CAC1B,CAAC,CAAE,CAACV,UAAU,CAAEL,KAAK,CAAC,CAAC,CACvB,GAAI,CAAA2B,qBAAqB,CAAG,CAAC,CAC7B,GAAIlB,iBAAiB,CAACmB,MAAM,CAAG,CAAC,CAAE,CAChC,KAAM,CAAAC,oBAAoB,CAAGC,IAAI,CAACC,GAAG,CAAC,GAAGtB,iBAAiB,CAACuB,GAAG,CAACC,KAAK,EAAIA,KAAK,CAACC,UAAU,CAAC,CAAC,CAC1FP,qBAAqB,CAAGE,oBAAoB,CAAG,CAAC,CAClD,CACA,KAAM,CAAAM,cAAc,CAAGtB,mBAAmB,CAACuB,MAAM,CAACF,UAAU,EAAIA,UAAU,EAAIP,qBAAqB,CAAC,CAEpG,KAAM,CAAAU,eAAe,CAAGA,CAAA,GAAM,CAC5BtC,kBAAkB,CAACY,kBAAkB,CAAC,CACxC,CAAC,CAED,KAAM,CAAA2B,UAAU,CAAGA,CAAA,GAAM,CACvBrC,gBAAgB,CAAC,CAAC,CACpB,CAAC,CAED,KAAM,CAAAsC,iBAAiB,CAAIL,UAAU,EAAK,CACxC,OAAQA,UAAU,EAChB,IAAK,EAAC,CACJ,MAAO,UAAU,CACnB,IAAK,EAAC,CACJ,MAAO,cAAc,CACvB,IAAK,EAAC,CACJ,MAAO,UAAU,CACnB,IAAK,EAAC,CACJ,MAAO,QAAQ,CACjB,IAAK,EAAC,CACJ,MAAO,QAAQ,CACjB,QACE,MAAO,SAAS,CACpB,CACF,CAAC,CAED,KAAM,CAAAM,kBAAkB,CAAIN,UAAU,EAAK,CACzC,OAAQA,UAAU,EAChB,IAAK,EAAC,CACJ,MAAO,SAAS,CAClB,IAAK,EAAC,CACJ,MAAO,SAAS,CAClB,IAAK,EAAC,CACJ,MAAO,SAAS,CAClB,IAAK,EAAC,CACJ,MAAO,SAAS,CAClB,IAAK,EAAC,CACJ,MAAO,SAAS,CAClB,QACE,MAAO,SAAS,CACpB,CACF,CAAC,CAED,mBACExC,KAAA,CAAAE,SAAA,EAAA6C,QAAA,eACEjD,IAAA,CAACF,MAAM,EAACoD,WAAW,CAAEJ,UAAW,CAAE,CAAC,cACnC9C,IAAA,QAAKmD,SAAS,CAAC,0GAA0G,CAAAF,QAAA,cACvH/C,KAAA,QAAKiD,SAAS,CAAC,0DAA0D,CAAAF,QAAA,eACvEjD,IAAA,UAAOmD,SAAS,CAAC,0DAA0D,CAAAF,QAAA,CAAC,oBAAkB,CAAO,CAAC,CAErG5B,mBAAmB,CAACmB,GAAG,CAAEE,UAAU,eAClC1C,IAAA,QAEEmD,SAAS,oDAAAzB,MAAA,CACPiB,cAAc,CAACS,QAAQ,CAACV,UAAU,CAAC,CAAG,gCAAgC,CAAG,EAAE,MAAAhB,MAAA,CACzEP,kBAAkB,GAAKuB,UAAU,CAAG,WAAW,CAAG,EAAE,2CAA0C,CAClGW,KAAK,CAAE,CACLC,eAAe,CAAEnC,kBAAkB,GAAKuB,UAAU,CAAGM,kBAAkB,CAACN,UAAU,CAAC,CAAG,EAAE,CACxFa,OAAO,CAAEZ,cAAc,CAACS,QAAQ,CAACV,UAAU,CAAC,CAAG,GAAG,CAAG,KAAO;AAC9D,CAAE,CACFc,OAAO,CAAEA,CAAA,GAAM,CACb,GAAIb,cAAc,CAACS,QAAQ,CAACV,UAAU,CAAC,CAAE,CACvCtB,qBAAqB,CAACsB,UAAU,CAAC,CACnC,CACF,CAAE,CAAAO,QAAA,cAEFjD,IAAA,QAAKmD,SAAS,oBAAAzB,MAAA,CAAqBP,kBAAkB,GAAKuB,UAAU,CAAG,aAAa,CAAG,YAAY,CAAG,CAAAO,QAAA,cACpGjD,IAAA,QAAAiD,QAAA,cACEjD,IAAA,OAAImD,SAAS,CAAC,kDAAkD,CAAAF,QAAA,CAC7DF,iBAAiB,CAACL,UAAU,CAAC,CAC5B,CAAC,CACF,CAAC,CACH,CAAC,EApBDA,UAqBF,CACN,CAAC,cACF1C,IAAA,WAAQmD,SAAS,CAAC,8IAA8I,CAACK,OAAO,CAAEX,eAAgB,CAAAI,QAAA,CAAC,YAAU,CAAQ,CAAC,EAC3M,CAAC,CACH,CAAC,EACN,CAAC,CAEP,CAAC,CAED,cAAe,CAAA5C,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}