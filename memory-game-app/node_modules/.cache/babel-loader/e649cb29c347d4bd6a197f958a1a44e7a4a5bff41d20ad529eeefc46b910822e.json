{"ast":null,"code":"var _jsxFileName = \"/Users/alekssvelvelis/Desktop/memory-game/src/components/VantaBackground.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport BIRDS from 'vanta/dist/vanta.birds.min';\nimport CELLS from 'vanta/dist/vanta.cells.min';\nimport NET from 'vanta/dist/vanta.net.min';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VantaBackground = ({\n  effect\n}) => {\n  _s();\n  const [vantaEffect, setVantaEffect] = useState(null);\n  const myRef = useRef(null);\n  useEffect(() => {\n    // Function to destroy current Vanta.js effect\n    const destroyEffect = () => {\n      if (vantaEffect) {\n        vantaEffect.destroy();\n        setVantaEffect(null);\n      }\n    };\n\n    // Initialize new Vanta.js effect based on selected effect\n    const initializeEffect = () => {\n      switch (effect) {\n        case 'birds':\n          setVantaEffect(BIRDS({\n            el: myRef.current,\n            THREE: THREE\n          }));\n          break;\n        case 'dots':\n          setVantaEffect(CELLS({\n            el: myRef.current,\n            THREE: THREE\n          }));\n          break;\n        case 'net':\n          setVantaEffect(NET({\n            el: myRef.current,\n            THREE: THREE\n          }));\n          break;\n        default:\n          console.error(`Invalid Vanta.js effect: ${effect}`);\n          break;\n      }\n    };\n\n    // Destroy previous effect and initialize new effect when effect changes\n    destroyEffect();\n    initializeEffect();\n\n    // Cleanup function to destroy effect on component unmount\n    return destroyEffect;\n  }, [effect]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: myRef,\n    style: {\n      width: '100%',\n      height: '100%'\n    },\n    children: \"Foreground content goes here\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(VantaBackground, \"mxmCMykF/Tg205yTtRwanxjWhPA=\");\n_c = VantaBackground;\nexport default VantaBackground;\nvar _c;\n$RefreshReg$(_c, \"VantaBackground\");","map":{"version":3,"names":["React","useState","useEffect","useRef","THREE","BIRDS","CELLS","NET","jsxDEV","_jsxDEV","VantaBackground","effect","_s","vantaEffect","setVantaEffect","myRef","destroyEffect","destroy","initializeEffect","el","current","console","error","ref","style","width","height","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/alekssvelvelis/Desktop/memory-game/src/components/VantaBackground.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport BIRDS from 'vanta/dist/vanta.birds.min';\nimport CELLS from 'vanta/dist/vanta.cells.min';\nimport NET from 'vanta/dist/vanta.net.min';\n\nconst VantaBackground = ({ effect }) => {\n  const [vantaEffect, setVantaEffect] = useState(null);\n  const myRef = useRef(null);\n\n  useEffect(() => {\n    // Function to destroy current Vanta.js effect\n    const destroyEffect = () => {\n      if (vantaEffect) {\n        vantaEffect.destroy();\n        setVantaEffect(null);\n      }\n    };\n\n    // Initialize new Vanta.js effect based on selected effect\n    const initializeEffect = () => {\n      switch (effect) {\n        case 'birds':\n          setVantaEffect(BIRDS({\n            el: myRef.current,\n            THREE: THREE\n          }));\n          break;\n        case 'dots':\n          setVantaEffect(CELLS({\n            el: myRef.current,\n            THREE: THREE\n          }));\n          break;\n        case 'net':\n          setVantaEffect(NET({\n            el: myRef.current,\n            THREE: THREE\n          }));\n          break;\n        default:\n          console.error(`Invalid Vanta.js effect: ${effect}`);\n          break;\n      }\n    };\n\n    // Destroy previous effect and initialize new effect when effect changes\n    destroyEffect();\n    initializeEffect();\n\n    // Cleanup function to destroy effect on component unmount\n    return destroyEffect;\n  }, [effect]);\n\n  return (\n    <div ref={myRef} style={{ width: '100%', height: '100%' }}>\n      Foreground content goes here\n    </div>\n  );\n};\n\nexport default VantaBackground;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAOC,KAAK,MAAM,4BAA4B;AAC9C,OAAOC,KAAK,MAAM,4BAA4B;AAC9C,OAAOC,GAAG,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAMc,KAAK,GAAGZ,MAAM,CAAC,IAAI,CAAC;EAE1BD,SAAS,CAAC,MAAM;IACd;IACA,MAAMc,aAAa,GAAGA,CAAA,KAAM;MAC1B,IAAIH,WAAW,EAAE;QACfA,WAAW,CAACI,OAAO,CAAC,CAAC;QACrBH,cAAc,CAAC,IAAI,CAAC;MACtB;IACF,CAAC;;IAED;IACA,MAAMI,gBAAgB,GAAGA,CAAA,KAAM;MAC7B,QAAQP,MAAM;QACZ,KAAK,OAAO;UACVG,cAAc,CAACT,KAAK,CAAC;YACnBc,EAAE,EAAEJ,KAAK,CAACK,OAAO;YACjBhB,KAAK,EAAEA;UACT,CAAC,CAAC,CAAC;UACH;QACF,KAAK,MAAM;UACTU,cAAc,CAACR,KAAK,CAAC;YACnBa,EAAE,EAAEJ,KAAK,CAACK,OAAO;YACjBhB,KAAK,EAAEA;UACT,CAAC,CAAC,CAAC;UACH;QACF,KAAK,KAAK;UACRU,cAAc,CAACP,GAAG,CAAC;YACjBY,EAAE,EAAEJ,KAAK,CAACK,OAAO;YACjBhB,KAAK,EAAEA;UACT,CAAC,CAAC,CAAC;UACH;QACF;UACEiB,OAAO,CAACC,KAAK,CAAE,4BAA2BX,MAAO,EAAC,CAAC;UACnD;MACJ;IACF,CAAC;;IAED;IACAK,aAAa,CAAC,CAAC;IACfE,gBAAgB,CAAC,CAAC;;IAElB;IACA,OAAOF,aAAa;EACtB,CAAC,EAAE,CAACL,MAAM,CAAC,CAAC;EAEZ,oBACEF,OAAA;IAAKc,GAAG,EAAER,KAAM;IAACS,KAAK,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAO,CAAE;IAAAC,QAAA,EAAC;EAE3D;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEV,CAAC;AAACnB,EAAA,CArDIF,eAAe;AAAAsB,EAAA,GAAftB,eAAe;AAuDrB,eAAeA,eAAe;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}