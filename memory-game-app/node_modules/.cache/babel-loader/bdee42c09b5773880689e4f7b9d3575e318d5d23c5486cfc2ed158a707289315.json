{"ast":null,"code":"import React,{useState}from'react';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function GoogleUserFirstTime(_ref){let{onClose,email,onUsernameChosen}=_ref;const[errors,setErrors]=useState({});const handleSubmitForm=async e=>{e.preventDefault();const validationErrors={};const formData={profileUsername:e.target.profileUsername.value,profileEmail:email};const usernameToClear=formData.profileUsername;if(!usernameToClear){validationErrors.profileUsername='Username is required';}else if(usernameToClear.match(/^[^a-zA-Z0-9]+$/)){validationErrors.profileUsername='Username cannot contain symbols';}else if(usernameToClear.trim().length<3){validationErrors.profileUsername='Minimum length is 3 symbols';}else if(usernameToClear.trim().length>15){validationErrors.profileUsername='Maximum length is 15 symbols';}setErrors(validationErrors);if(Object.keys(validationErrors).length===0){try{console.log(formData);const isLoggedInObject=localStorage.getItem('token');const isLoggedIn=isLoggedInObject?JSON.parse(isLoggedInObject).value:null;const response=await fetch('http://localhost/api/updateUserData',{method:'PUT',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(isLoggedIn)},body:JSON.stringify(formData)});if(!response.ok){const responseData=await response.json();console.error(errors);setErrors(responseData.errors);console.log(errors);}else{console.log('success updating google login');onUsernameChosen(formData.profileUsername);onClose();}}catch(error){console.error('Error',error);}}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-screen h-screen fixed top-0 left-0 bg-black bg-opacity-40 z-40 transition-opacity duration-300 opacity-100\"}),/*#__PURE__*/_jsx(\"div\",{className:\"border-[3px] z-[45] text-white border-neutral-300 bg-[#181a1b] shadow-lg sm:ml-0 md:ml-0 lg:ml-0 lg:ml-0 min-h-[250px] xl:w-[500px] lg:w-[500px] md:w-[500px] sm:w-[500px] max-[425px]:w-[400px] max-[375px]:w-[350px] max-[325px]:w-[310px]  w-[400px] font-light rounded-md shadow-lg mb-4 max-[769px]:mt-[24px] mt-[48px] fixed -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2\",children:/*#__PURE__*/_jsx(\"div\",{className:\"w-full min-h-full flex flex-wrap\",children:/*#__PURE__*/_jsxs(\"form\",{className:\"w-full min-h-full flex flex-col justify-center items-center\",onSubmit:handleSubmitForm,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"w-[95%]\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl tracking-widest my-1\",children:\"Hey! Welcome to Memoria!\"}),/*#__PURE__*/_jsx(\"p\",{className:\"font-light text-lg uppercase text-[rgb(175,169,158)] mb-4 mt-2\",children:\"Choose your username to continue:\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"w-[90%]\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"ml-3 text-lg uppercase tracking-widest\",htmlFor:\"profileUsername\",children:\"Username:\"}),/*#__PURE__*/_jsx(\"input\",{className:\"focus:outline-none bg-transparent hover:scale-105 focus:scale-105 hover:border-neutral-200 focus:border-2 duration-150 border border-neutral-600 text-lg indent-2 p-1 w-full h-10 rounded-sm mb-2\",type:\"text\",id:\"profileUsername\",name:\"profileUsername\"}),errors.profileUsername&&/*#__PURE__*/_jsx(\"p\",{className:\"text-red-500 ml-2 text-lg\",children:errors.profileUsername})]}),/*#__PURE__*/_jsx(\"input\",{className:\"mt-4 w-[75%] my-2 h-10 bg-[rgb(33,36,37)] hover:bg-[rgb(39,42,43)] hover:border-neutral-200 focus:border-2 border-neutral-600 border text-white text-2xl rounded-sm duration-500 hover:scale-105 cursor-pointer\",type:\"submit\",value:\"Submit\"})]})})})]});}export default GoogleUserFirstTime;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","GoogleUserFirstTime","_ref","onClose","email","onUsernameChosen","errors","setErrors","handleSubmitForm","e","preventDefault","validationErrors","formData","profileUsername","target","value","profileEmail","usernameToClear","match","trim","length","Object","keys","console","log","isLoggedInObject","localStorage","getItem","isLoggedIn","JSON","parse","response","fetch","method","headers","concat","body","stringify","ok","responseData","json","error","children","className","onSubmit","htmlFor","type","id","name"],"sources":["/Users/alekssvelvelis/Desktop/memory-game/src/components/Profile/GoogleUserFirstTime.jsx"],"sourcesContent":["import React, { useState } from 'react';\nfunction GoogleUserFirstTime({ onClose, email, onUsernameChosen }) {\n    const [errors, setErrors] = useState({});\n\n    const handleSubmitForm = async (e) => {\n        e.preventDefault();\n\n        const validationErrors = {};\n\n        const formData = {\n            profileUsername : e.target.profileUsername.value,\n            profileEmail : email,\n        }\n\n        const usernameToClear = formData.profileUsername;\n        if (!usernameToClear) {\n            validationErrors.profileUsername = 'Username is required';\n        } else if (usernameToClear.match(/^[^a-zA-Z0-9]+$/)){\n            validationErrors.profileUsername = 'Username cannot contain symbols';\n        } else if(usernameToClear.trim().length < 3){\n            validationErrors.profileUsername = 'Minimum length is 3 symbols';\n        } else if(usernameToClear.trim().length > 15){\n            validationErrors.profileUsername = 'Maximum length is 15 symbols';\n        }\n        setErrors(validationErrors);\n\n        if (Object.keys(validationErrors).length === 0) {\n            try {\n                console.log(formData);\n                const isLoggedInObject = localStorage.getItem('token');\n                const isLoggedIn = isLoggedInObject ? JSON.parse(isLoggedInObject).value : null;\n                const response = await fetch('http://localhost/api/updateUserData', {\n                    method: 'PUT',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': `Bearer ${isLoggedIn}`\n                    },\n                    body: JSON.stringify(formData)\n                });\n                if(!response.ok){\n                    const responseData = await response.json();\n                    console.error(errors);\n                    setErrors(responseData.errors);\n                    console.log(errors);\n                }else{\n                    console.log('success updating google login');\n                    onUsernameChosen(formData.profileUsername);\n                    onClose();\n                }\n            } catch (error) {\n                console.error('Error', error);\n            }\n        }\n    }\n    return (\n        <>\n        <div className={`w-screen h-screen fixed top-0 left-0 bg-black bg-opacity-40 z-40 transition-opacity duration-300 opacity-100`}></div>\n        <div className={`border-[3px] z-[45] text-white border-neutral-300 bg-[#181a1b] shadow-lg sm:ml-0 md:ml-0 lg:ml-0 lg:ml-0 min-h-[250px] xl:w-[500px] lg:w-[500px] md:w-[500px] sm:w-[500px] max-[425px]:w-[400px] max-[375px]:w-[350px] max-[325px]:w-[310px]  w-[400px] font-light rounded-md shadow-lg mb-4 max-[769px]:mt-[24px] mt-[48px] fixed -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2`}>\n            <div className='w-full min-h-full flex flex-wrap'>\n                <form className='w-full min-h-full flex flex-col justify-center items-center' onSubmit={handleSubmitForm}>\n                    <div className='w-[95%]'>\n                        <h1 className='text-3xl tracking-widest my-1'>Hey! Welcome to Memoria!</h1>\n                        <p className='font-light text-lg uppercase text-[rgb(175,169,158)] mb-4 mt-2'>Choose your username to continue:</p>\n                    </div>\n                    <div className='w-[90%]'>\n                        <label className='ml-3 text-lg uppercase tracking-widest' htmlFor='profileUsername'>Username:</label>\n                        <input className='focus:outline-none bg-transparent hover:scale-105 focus:scale-105 hover:border-neutral-200 focus:border-2 duration-150 border border-neutral-600 text-lg indent-2 p-1 w-full h-10 rounded-sm mb-2' type='text' id='profileUsername' name='profileUsername'/>\n                        {errors.profileUsername && (<p className='text-red-500 ml-2 text-lg'>{errors.profileUsername}</p>)}\n                    </div>\n                    <input className='mt-4 w-[75%] my-2 h-10 bg-[rgb(33,36,37)] hover:bg-[rgb(39,42,43)] hover:border-neutral-200 focus:border-2 border-neutral-600 border text-white text-2xl rounded-sm duration-500 hover:scale-105 cursor-pointer' type='submit' value='Submit' />\n                </form>\n            </div>\n        </div>\n        </>\n    );  \n}\n\nexport default GoogleUserFirstTime;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}