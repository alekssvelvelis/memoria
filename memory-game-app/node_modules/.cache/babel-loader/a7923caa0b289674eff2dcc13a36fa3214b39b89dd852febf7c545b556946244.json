{"ast":null,"code":"var _jsxFileName = \"/Users/alekssvelvelis/Desktop/memory-game/src/components/DifficultySelector.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Header from './Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DifficultySelector = ({\n  onSelectDifficulty,\n  theme\n}) => {\n  _s();\n  const isLoggedInObject = localStorage.getItem('token');\n  const isLoggedIn = isLoggedInObject ? JSON.parse(isLoggedInObject).value : null;\n  const difficulties = [3, 4, 5, 6, 7];\n  const [userClearedLevels, setUserClearedLevels] = useState([]);\n  const [selectedDifficulty, setSelectedDifficulty] = useState(difficulties[0]);\n  useEffect(() => {\n    const fetchUserClearedLevels = async () => {\n      try {\n        const response = await fetch(`http://localhost/api/getClearedLevels?theme=${theme}`, {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${isLoggedIn}`\n          }\n        });\n        const responseData = await response.json();\n        if (!response.ok) {\n          console.error('Error:', responseData);\n        } else {\n          setUserClearedLevels(responseData);\n          console.log(responseData);\n          console.log('game and achievements logged');\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    };\n    fetchUserClearedLevels();\n  }, [isLoggedIn, theme]);\n  const maxClearedDifficulty = Math.max(...clearedLevels.map(level => level.difficulty));\n  const maxUnlockedDifficulty = maxClearedDifficulty + 1;\n  const handleStartGame = () => {\n    onSelectDifficulty(selectedDifficulty);\n  };\n\n  // Map function for textual representation of difficultiess\n  const getDifficultyName = difficulty => {\n    switch (difficulty) {\n      case 3:\n        return 'Beginner';\n      case 4:\n        return 'Intermediate';\n      case 5:\n        return 'Advanced';\n      case 6:\n        return 'Expert';\n      case 7:\n        return 'Master';\n      default:\n        return 'Unknown';\n    }\n  };\n  const getDifficultyColor = difficulty => {\n    switch (difficulty) {\n      case 3:\n        return '#C564D2';\n      case 4:\n        return '#9E35B5';\n      case 5:\n        return '#720E98';\n      case 6:\n        return '#4D0A76';\n      case 7:\n        return '#320652';\n      default:\n        return 'Unknown';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-y-scroll min-h-screen bg-[rgb(18,18,18,0.9)] flex items-center justify-center w-full text-white\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-full w-[95%] flex flex-col justify-center items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"uppercase font-light tracking-widest text-2xl my-4\",\n          children: \"Select Difficulty:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), difficulties.map(difficulty => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `w-[300px] transition-all transform duration-500 hover:scale-105 ${selectedDifficulty === difficulty ? 'scale-105' : ''} relative m-2 border border-neutral-200 cursor-pointer`,\n          style: {\n            backgroundColor: selectedDifficulty === difficulty ? getDifficultyColor(difficulty) : ''\n          },\n          onClick: () => setSelectedDifficulty(difficulty),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `w-full text-2xl hover:opacity-80 ${selectedDifficulty === difficulty ? 'opacity-100' : 'opacity-60'}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"text-center uppercase font-light tracking-widest\",\n                children: getDifficultyName(difficulty)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)\n        }, difficulty, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleStartGame,\n          children: \"Start Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(DifficultySelector, \"4KRBp/HRXDDb1jRmGHs5/SIXAvs=\");\n_c = DifficultySelector;\nexport default DifficultySelector;\nvar _c;\n$RefreshReg$(_c, \"DifficultySelector\");","map":{"version":3,"names":["React","useState","useEffect","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","DifficultySelector","onSelectDifficulty","theme","_s","isLoggedInObject","localStorage","getItem","isLoggedIn","JSON","parse","value","difficulties","userClearedLevels","setUserClearedLevels","selectedDifficulty","setSelectedDifficulty","fetchUserClearedLevels","response","fetch","method","headers","responseData","json","ok","console","error","log","maxClearedDifficulty","Math","max","clearedLevels","map","level","difficulty","maxUnlockedDifficulty","handleStartGame","getDifficultyName","getDifficultyColor","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","backgroundColor","onClick","_c","$RefreshReg$"],"sources":["/Users/alekssvelvelis/Desktop/memory-game/src/components/DifficultySelector.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Header from './Header';\n\nconst DifficultySelector = ({ onSelectDifficulty, theme }) => {\n  const isLoggedInObject = localStorage.getItem('token');\n  const isLoggedIn = isLoggedInObject ? JSON.parse(isLoggedInObject).value : null;\n  const difficulties = [3, 4, 5, 6, 7];\n  const [userClearedLevels, setUserClearedLevels] = useState([]);\n  const [selectedDifficulty, setSelectedDifficulty] = useState(difficulties[0]);\n\n  useEffect(() => {\n    const fetchUserClearedLevels = async () => {\n        try {\n          const response = await fetch(`http://localhost/api/getClearedLevels?theme=${theme}`, {\n                method: 'GET',\n                headers: {\n                    'Authorization': `Bearer ${isLoggedIn}`\n                },\n            });\n            const responseData = await response.json();\n            if (!response.ok) {\n                console.error('Error:', responseData);\n            } else {\n                setUserClearedLevels(responseData);\n                console.log(responseData);\n                console.log('game and achievements logged');\n            }\n        } catch (error) {\n            console.error('Error:', error);\n        }\n    };\n\n    fetchUserClearedLevels();\n  }, [isLoggedIn, theme]);\n\n  const maxClearedDifficulty = Math.max(...clearedLevels.map(level => level.difficulty));\nconst maxUnlockedDifficulty = maxClearedDifficulty + 1;\n\n  const handleStartGame = () => {\n    onSelectDifficulty(selectedDifficulty);\n  };\n\n  // Map function for textual representation of difficultiess\n  const getDifficultyName = (difficulty) => {\n    switch (difficulty) {\n      case 3:\n        return 'Beginner';\n      case 4:\n        return 'Intermediate';\n      case 5:\n        return 'Advanced';\n      case 6:\n        return 'Expert';\n      case 7:\n        return 'Master';\n      default:\n        return 'Unknown';\n    }\n  };\n\n  const getDifficultyColor = (difficulty) => {\n    switch (difficulty) {\n      case 3:\n        return '#C564D2';\n      case 4:\n        return '#9E35B5';\n      case 5:\n        return '#720E98';\n      case 6:\n        return '#4D0A76';\n      case 7:\n        return '#320652';\n      default:\n        return 'Unknown';\n    }\n  };\n\n  return (\n    <>\n      <Header />\n      <div className=\"overflow-y-scroll min-h-screen bg-[rgb(18,18,18,0.9)] flex items-center justify-center w-full text-white\">\n        <div className='h-full w-[95%] flex flex-col justify-center items-center'>\n          <label className='uppercase font-light tracking-widest text-2xl my-4'>Select Difficulty:</label>\n          \n          {difficulties.map((difficulty) => (\n            <div\n              key={difficulty}\n              className={`w-[300px] transition-all transform duration-500 hover:scale-105 ${selectedDifficulty === difficulty ? 'scale-105' : ''} relative m-2 border border-neutral-200 cursor-pointer`}\n              style={{ backgroundColor: selectedDifficulty === difficulty ? getDifficultyColor(difficulty) : '' }}\n              onClick={() => setSelectedDifficulty(difficulty)}\n            >\n              <div className={`w-full text-2xl hover:opacity-80 ${selectedDifficulty === difficulty ? 'opacity-100' : 'opacity-60'}`}>\n                <div>\n                  <h1 className='text-center uppercase font-light tracking-widest'>\n                    {getDifficultyName(difficulty)}\n                  </h1>\n                </div>\n              </div>\n            </div>\n          ))}\n          <button onClick={handleStartGame}>Start Game</button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default DifficultySelector;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}