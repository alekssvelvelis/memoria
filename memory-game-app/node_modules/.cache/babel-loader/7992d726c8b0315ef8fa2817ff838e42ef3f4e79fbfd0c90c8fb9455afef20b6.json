{"ast":null,"code":"var _jsxFileName = \"/Users/alekssvelvelis/Desktop/memory-game/src/components/Card.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Card({\n  content,\n  isFlipped,\n  isMatched,\n  onClick,\n  cardSize,\n  gameEnded\n}) {\n  _s();\n  // State to store the rotation angle\n  const [rotationAngle, setRotationAngle] = useState(0);\n  useEffect(() => {\n    // Generate a random rotation angle when the component mounts\n    setRotationAngle(Math.random() * 230 - 115);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `group rounded-xl [perspective:1000px]`,\n    onClick: () => !isMatched && onClick(),\n    style: {\n      height: `${cardSize}px`,\n      width: `${cardSize}px`,\n      opacity: isMatched ? 0.5 : 1,\n      transition: 'opacity 0.25s ease-in'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `hover:scale-105 cursor-pointer relative h-full w-full rounded-xl shadow-xl transition-all duration-500 text-slate-200 [transform-style:preserve-3d] [backface-visibility:hidden] ${isFlipped ? '[transform:rotateY(180deg)]' : ''} ${gameEnded && !isMatched ? 'animate-rotateAndMoveDown' : '' // Apply the animation only when the game is lost and the card is flipped but not matched\n      }`,\n      style: {\n        transform: `rotate(${rotationAngle}deg)` // Apply the generated rotation angle\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute inset-0 flex rounded-xl bg-slate-600 justify-center items-center align-center\",\n        children: isFlipped ? /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"w-full h-full rounded-xl object-cover bg-cover\",\n          src: content,\n          alt: \"Card Front\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 34\n        }, this) : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `absolute inset-0 h-full w-full rounded-xl bg-slate-600 flex justify-center items-center align-center text-slate-200 [transform:rotateY(180deg)] [backface-visibility:hidden] `,\n        children: isFlipped && /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"w-full h-full rounded-xl object-cover bg-cover\",\n          src: content,\n          alt: \"Card Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n_s(Card, \"kQd3B0LwD50gpkal4FKKP9q9xJA=\");\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Card","content","isFlipped","isMatched","onClick","cardSize","gameEnded","_s","rotationAngle","setRotationAngle","Math","random","className","style","height","width","opacity","transition","children","transform","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/alekssvelvelis/Desktop/memory-game/src/components/Card.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction Card({ content, isFlipped, isMatched, onClick, cardSize, gameEnded }) {\n    // State to store the rotation angle\n    const [rotationAngle, setRotationAngle] = useState(0);\n\n    useEffect(() => {\n        // Generate a random rotation angle when the component mounts\n        setRotationAngle(Math.random() * 230 - 115);\n    }, []);\n\n    return (\n        <div\n            className={`group rounded-xl [perspective:1000px]`}\n            onClick={() => !isMatched && onClick()}\n            style={{\n                height: `${cardSize}px`,\n                width: `${cardSize}px`,\n                opacity: isMatched ? 0.5 : 1,\n                transition: 'opacity 0.25s ease-in',\n            }}\n        >\n            <div\n                className={`hover:scale-105 cursor-pointer relative h-full w-full rounded-xl shadow-xl transition-all duration-500 text-slate-200 [transform-style:preserve-3d] [backface-visibility:hidden] ${\n                    isFlipped ? '[transform:rotateY(180deg)]' : ''\n                } ${\n                    gameEnded && !isMatched ? 'animate-rotateAndMoveDown' : '' // Apply the animation only when the game is lost and the card is flipped but not matched\n                }`}\n                style={{\n                    transform: `rotate(${rotationAngle}deg)` // Apply the generated rotation angle\n                }}\n            >\n                <div className='absolute inset-0 flex rounded-xl bg-slate-600 justify-center items-center align-center'>\n                    {isFlipped ? <img className='w-full h-full rounded-xl object-cover bg-cover' src={content} alt=\"Card Front\"></img> : ''}\n                </div>\n                <div\n                    className={`absolute inset-0 h-full w-full rounded-xl bg-slate-600 flex justify-center items-center align-center text-slate-200 [transform:rotateY(180deg)] [backface-visibility:hidden] `}\n                >\n                    {isFlipped && <img className='w-full h-full rounded-xl object-cover bg-cover' src={content} alt=\"Card Back\"></img>}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,IAAIA,CAAC;EAAEC,OAAO;EAAEC,SAAS;EAAEC,SAAS;EAAEC,OAAO;EAAEC,QAAQ;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EAC3E;EACA,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAErDC,SAAS,CAAC,MAAM;IACZ;IACAY,gBAAgB,CAACC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC;EAC/C,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIZ,OAAA;IACIa,SAAS,EAAG,uCAAuC;IACnDR,OAAO,EAAEA,CAAA,KAAM,CAACD,SAAS,IAAIC,OAAO,CAAC,CAAE;IACvCS,KAAK,EAAE;MACHC,MAAM,EAAG,GAAET,QAAS,IAAG;MACvBU,KAAK,EAAG,GAAEV,QAAS,IAAG;MACtBW,OAAO,EAAEb,SAAS,GAAG,GAAG,GAAG,CAAC;MAC5Bc,UAAU,EAAE;IAChB,CAAE;IAAAC,QAAA,eAEFnB,OAAA;MACIa,SAAS,EAAG,oLACRV,SAAS,GAAG,6BAA6B,GAAG,EAC/C,IACGI,SAAS,IAAI,CAACH,SAAS,GAAG,2BAA2B,GAAG,EAAE,CAAC;MAC9D,EAAE;MACHU,KAAK,EAAE;QACHM,SAAS,EAAG,UAASX,aAAc,MAAK,CAAC;MAC7C,CAAE;MAAAU,QAAA,gBAEFnB,OAAA;QAAKa,SAAS,EAAC,wFAAwF;QAAAM,QAAA,EAClGhB,SAAS,gBAAGH,OAAA;UAAKa,SAAS,EAAC,gDAAgD;UAACQ,GAAG,EAAEnB,OAAQ;UAACoB,GAAG,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,GAAG;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtH,CAAC,eACN1B,OAAA;QACIa,SAAS,EAAG,+KAA+K;QAAAM,QAAA,EAE1LhB,SAAS,iBAAIH,OAAA;UAAKa,SAAS,EAAC,gDAAgD;UAACQ,GAAG,EAAEnB,OAAQ;UAACoB,GAAG,EAAC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAClB,EAAA,CAzCQP,IAAI;AAAA0B,EAAA,GAAJ1B,IAAI;AA2Cb,eAAeA,IAAI;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}