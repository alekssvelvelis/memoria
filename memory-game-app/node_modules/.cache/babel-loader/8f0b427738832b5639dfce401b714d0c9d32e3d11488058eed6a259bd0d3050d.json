{"ast":null,"code":"import React,{useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function ProfileAchievements(){const[userAchievements,setUserAchievements]=useState([]);const[allAchievements,setAllAchievements]=useState([]);const isLoggedInObject=localStorage.getItem('token');const isLoggedIn=isLoggedInObject?JSON.parse(isLoggedInObject).value:null;useEffect(()=>{const fetchUserAchievements=async()=>{try{const response=await fetch('http://localhost/api/getUserAchievements',{method:'GET',headers:{'Authorization':\"Bearer \".concat(isLoggedIn)}});const responseData=await response.json();if(!response.ok){console.error('Error:',responseData);}else{setUserAchievements(responseData.achievements);setAllAchievements(responseData.totalAchievements);console.log(responseData);console.log('game and achievements logged');}}catch(error){console.error('Error:',error);}};fetchUserAchievements();},[isLoggedIn]);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"w-[85%] sm:min-h-[45%] rounded-xl flex flex-col items-scenter bg-[rgb(26,26,26,0.9)] my-2\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl sm:text-3xl tracking-widest font-light uppercase text-center my-2\",children:\"YOUR ACHIEVEMENTS:\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-xl tracking-widest font-light uppercase text-center text-[rgb(175,169,158)]\",children:[\"Memoria completion: \",(userAchievements.length/allAchievements.length*100).toFixed(2),\"%\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex gap-10 overflow-scroll\",children:userAchievements.map(achievement=>/*#__PURE__*/_jsx(\"div\",{className:\"group m-2 h-[150px] w-[150px] [perspective:1000px]\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"relative h-full w-[150px] rounded-xl shadow-lg transition-all duration-500 [transform-style:preserve-3d] group-hover:[transform:rotateY(180deg)]\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"absolute inset-0\",children:/*#__PURE__*/_jsx(\"img\",{className:\"h-full w-full rounded-xl object-cover shadow-xl shadow-black/40\",src:\"http://localhost/\".concat(achievement===null||achievement===void 0?void 0:achievement.image_path),alt:\"\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"absolute inset-0 h-full w-full rounded-xl bg-black/40 text-center text-slate-200 [transform:rotateY(180deg)] [backface-visibility:hidden]\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex w-full min-h-full flex-col items-center justify-center\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"tracking-widest font-light uppercase\",children:achievement.achievement}),/*#__PURE__*/_jsx(\"p\",{className:\"tracking-widest font-light\",children:achievement.description}),/*#__PURE__*/_jsx(\"p\",{className:\"tracking-widest font-light\",children:new Date(achievement.pivot.created_at).toLocaleDateString()})]})})]})}))})]})});}export default ProfileAchievements;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ProfileAchievements","userAchievements","setUserAchievements","allAchievements","setAllAchievements","isLoggedInObject","localStorage","getItem","isLoggedIn","JSON","parse","value","fetchUserAchievements","response","fetch","method","headers","concat","responseData","json","ok","console","error","achievements","totalAchievements","log","children","className","length","toFixed","map","achievement","src","image_path","alt","description","Date","pivot","created_at","toLocaleDateString"],"sources":["/Users/alekssvelvelis/Desktop/memory-game/src/components/ProfileAchievements.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction ProfileAchievements() {\n    const [userAchievements, setUserAchievements] = useState([]);\n    const [allAchievements, setAllAchievements] = useState([]);\n    const isLoggedInObject = localStorage.getItem('token');\n    const isLoggedIn = isLoggedInObject ? JSON.parse(isLoggedInObject).value : null;\n\n    useEffect(() => {\n        const fetchUserAchievements = async () => {\n            try {\n                const response = await fetch('http://localhost/api/getUserAchievements', {\n                    method: 'GET',\n                    headers: {\n                        'Authorization': `Bearer ${isLoggedIn}`\n                    },\n                });\n                const responseData = await response.json();\n                if (!response.ok) {\n                    console.error('Error:', responseData);\n                } else {\n                    setUserAchievements(responseData.achievements);\n                    setAllAchievements(responseData.totalAchievements);\n                    console.log(responseData);\n                    console.log('game and achievements logged');\n                }\n            } catch (error) {\n                console.error('Error:', error);\n            }\n        };\n\n        fetchUserAchievements();\n    }, [isLoggedIn]);\n\n    return (\n        <>\n            <div className='w-[85%] sm:min-h-[45%] rounded-xl flex flex-col items-scenter bg-[rgb(26,26,26,0.9)] my-2'>\n                <h1 className='text-2xl sm:text-3xl tracking-widest font-light uppercase text-center my-2'>YOUR ACHIEVEMENTS:</h1>\n                <p className='text-xl tracking-widest font-light uppercase text-center text-[rgb(175,169,158)]'>Memoria completion: {((userAchievements.length/allAchievements.length)*100).toFixed(2)}%</p>\n                <div className='flex gap-10 overflow-scroll'>\n                    {userAchievements.map((achievement) => (\n                        <div className='group m-2 h-[150px] w-[150px] [perspective:1000px]'>\n                            <div className='relative h-full w-[150px] rounded-xl shadow-lg transition-all duration-500 [transform-style:preserve-3d] group-hover:[transform:rotateY(180deg)]'>\n                                <div className='absolute inset-0'>\n                                    <img className='h-full w-full rounded-xl object-cover shadow-xl shadow-black/40' src={`http://localhost/${achievement?.image_path}`} alt=\"\" />\n                                </div>\n                                <div className='absolute inset-0 h-full w-full rounded-xl bg-black/40 text-center text-slate-200 [transform:rotateY(180deg)] [backface-visibility:hidden]'>\n                                    <div className='flex w-full min-h-full flex-col items-center justify-center'>\n                                        <h1 className='tracking-widest font-light uppercase'>{achievement.achievement}</h1>\n                                        <p className='tracking-widest font-light'>{achievement.description}</p>\n                                        <p className='tracking-widest font-light'>{new Date(achievement.pivot.created_at).toLocaleDateString()}</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n                \n            </div>\n        </>\n    );\n}\n\nexport default ProfileAchievements;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}